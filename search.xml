<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>数星星⭐ | 青岛之行</title>
      <link href="%E9%9D%92%E5%B2%9B/"/>
      <url>%E9%9D%92%E5%B2%9B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src= "/img/loading.gif" data-lazy-src="../img/longlogo.jpg" alt="logo"></p><p style='color:pink;font-size:20px;text-align:center;width:100%'>- 这是数星星⭐的日子的第125天 -</p><p style='color:orange;font-size:16px;text-align:center;width:100%'>- 这是橘子的博客第20篇博客 -</p><h2 id="📅青岛之行从接到星星⭐那一刻正式开始"><a href="#📅青岛之行从接到星星⭐那一刻正式开始" class="headerlink" title="📅青岛之行从接到星星⭐那一刻正式开始"></a><span style='color:#2177b8'>📅青岛之行从接到星星⭐那一刻正式开始</span></h2><blockquote><p>青岛之行从接到星星⭐那一刻正式开始</p></blockquote><div style='font-size:14px'>下午1点50分的时候，一大波人群冲了出来，我东张西望，并没见到期盼已久的人儿，虽然知道要2点18分才到站，却始终希望提前到达。<p>滴滴答答，终于在出口见到了心心念念的人。啊！一眼就认出来了！是你呀，星星⭐！还是一如既往的的好看温柔。嘻嘻嘻。<br><img src= "/img/loading.gif" data-lazy-src="../img/2021/4/1.jpg" alt="时间"></p><p>等到见面礼拿出来的那一刻起，我愣了，惭愧围绕着我，我没有买….而星星⭐却带了，真的惭愧的很。有很感动到哭。</p><p>一直说想换一个皮筋戴，没想到直接给我了一个手链。超级超级超级喜欢的那种！！！<br><img src= "/img/loading.gif" data-lazy-src="../img/2021/4/38.jpg" alt="周大生手链"></p><p>戴着手链和星星⭐去了台东美食商业街开始逛了起来，也是在这里调了下手链的大小。</p><p>吃了碳烤晚饭后的我们在这里逛了起来。在这期间做了一件很愚蠢的事情，惹得星星⭐不开心。</p><p>一路无话的来到了栈桥。和星星⭐一起看了夜间的大海，捡了贝壳，也怕了浪花，吹了一晚海风，夜晚的风挺大的。<br><img src= "/img/loading.gif" data-lazy-src="../img/2021/4/10.jpg" alt="捡贝壳"></p></div><h2 id="📅最美好的时光就是和你在一起"><a href="#📅最美好的时光就是和你在一起" class="headerlink" title="📅最美好的时光就是和你在一起"></a><span style='color:#2177b8'>📅最美好的时光就是和你在一起</span></h2><blockquote><p>最美好的时光就是和你在一起</p></blockquote><div style='font-size:14px'><b style='color:#2b73af'>出海</b>，对于一个出生在内地，几乎没见过还得人来说，是很特别的事情，在这个事情上加上第一次出海以及和星星⭐一起，是多么多美美好的时光。在船上的那一刻，真的很想将时间定格在此刻。此刻的大海，都遮不住你美丽善良温柔，特别舒服，仿佛生活本就应该是这样子的。希望和你一直在一起就这样好好的。<p><img src= "/img/loading.gif" data-lazy-src="../img/2021/4/23.jpg" alt="美丽善良温柔的星星⭐"><br><img src= "/img/loading.gif" data-lazy-src="../img/2021/4/24.jpg" alt="丑陋的我"></p><p>吃一顿海鲜是怎么样的体验？大概就是很大一锅，然后吃不完的感觉吧。等了好久好久，才吃上了这个海鲜，排队不多，就是上菜很慢，可能这就是海鲜吧，需要弄很久很久。<br><img src= "/img/loading.gif" data-lazy-src="../img/2021/4/27.jpg" alt="海鲜"></p><p>青岛啤酒，很出名的样子。啤酒博物馆，也挺大的，扶着星星⭐老佛爷在里面逛了逛，喝了一杯原浆啤酒，一杯纯生啤酒，吃了啤酒豆。星星⭐老佛爷还使劲往我杯子里面倒酒呢，但我就是非常开心的呀。</p><p><img src= "/img/loading.gif" data-lazy-src="../img/2021/4/28.jpg" alt="啤酒博物馆"></p><p>《我的姐姐》刚好上映，晚上就走起看电影呀，蛮感动的电影。我们的电影票在最后一排，以前从来没有觉得最后一排有啥好的，但是这一次，竟然觉得最后一排居然也是这么好的地方，简直是风水宝地呀。嘿嘿嘿</p><p><img src= "/img/loading.gif" data-lazy-src="../img/2021/4/33.jpg" alt="我的姐姐"></p><!-- ![捡贝壳](../img/2021/4/11.jpg)![捡贝壳](../img/2021/4/13.jpg)![捡贝壳](../img/2021/4/17.jpg)![捡贝壳](../img/2021/4/20.jpg) --></div><h2 id="📅悲伤也是从离别开始的"><a href="#📅悲伤也是从离别开始的" class="headerlink" title="📅悲伤也是从离别开始的"></a><span style='color:#2177b8'>📅悲伤也是从离别开始的</span></h2><div style='font-size:14px'>一大早醒了就想到了要分开了，就特别难过，想哭。但是始终是要分开。<p>午饭一顿火锅，给星星⭐调了一份料碟。全程消费又何公子买了单。</p><p><img src= "/img/loading.gif" data-lazy-src="../img/2021/4/30.jpg" alt="火锅"></p><p>剩下为数不多相处时间在火车站过了。发生了一件有趣而又气愤的事情。我去便利店买水，当我出来的那一刻竟然看到了一个男的在那里可劲的和星星⭐说话，明显星星⭐不想理他，他居然还一屁股坐了旁边，那不是我坐的地方吗？气愤的我，直接冲了过去！哦，推销的呢？在我明显的提醒下，他居然还不走！可恶！！！</p><p><img src= "/img/loading.gif" data-lazy-src="../img/2021/4/39.jpg" alt="合照"></p></div><p style='width:100%;text-align:center;font-size:16px'>- END -</p><div style='font-size:14px'>这趟旅行真的超级超级超级开心，但是时间太短了，超级想和星星⭐呆在一起。希望时间快点吧，直到我们结束异地。然后时间慢点吧。这次最大的遗憾就是没有在离别的时候最后亲一次星星⭐，一直害羞没有行动...不知道为啥，今天的我，老是眼睛酸，还不停的被迷了眼呢。<p><img src= "/img/loading.gif" data-lazy-src="../img/2021/4/37.jpg" alt="是你呀"></p></div>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 爱情 </category>
          
          <category> 旅游 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数星星⭐ </tag>
            
            <tag> 青岛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>纪念日 | 100天纪念日</title>
      <link href="100/"/>
      <url>100/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src= "/img/loading.gif" data-lazy-src="../img/longlogo.jpg" alt="logo"></p><blockquote><p>100天纪念日</p></blockquote><p  style='font-size:20px;margin-top:20px'><b>日期：</b><span style='color:#fcc'>100天纪念日</span> </p><p  style='font-size:20px;margin-top:20px'><b>心情：</b> </p><div style='font-size:20px;color:#fcc'><span>开心：</span>收到了令我非常感动的礼物。</div><div style='font-size:20px;color:#fcc'><span>愧疚：</span>我并没有准备礼物。</div><div style='font-size:20px;color:#fcc'><span>复杂：</span>愧疚中夹杂着开心以及给自己暗自定了个目标。</div><p style='font-size:20px;margin-top:20px'><b>礼物：</b></p><p><img src= "/img/loading.gif" data-lazy-src="../img/2021/3/100(1).jpg" alt="包装"></p><p><img src= "/img/loading.gif" data-lazy-src="../img/2021/3/100(2).jpg" alt="礼物"></p><p><img src= "/img/loading.gif" data-lazy-src="../img/2021/3/100(3).jpg" alt="摆出来"></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 爱情 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 纪念日 </tag>
            
            <tag> 100天 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker | docker踩坑记录</title>
      <link href="docker/"/>
      <url>docker/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src= "/img/loading.gif" data-lazy-src="../img/longlogo.jpg" alt="logo"></p><blockquote><p>为了方便部署项目以及版本迭代更新等。在linux上就打算使用docker。以下记录忘了截图，所以没有图片。</p></blockquote><h2 id="1-下载docker"><a href="#1-下载docker" class="headerlink" title="1.下载docker"></a>1.下载docker</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install docker.io</span><br><span class="line">docker version</span><br></pre></td></tr></table></figure><p>查看版本信息后，如果一般会说你没有权限操作，这个时候就需要将你使用的这个用户加入到用户组中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo groupadd docker</span><br><span class="line">sudo gpasswd -a $&#123;USER&#125; docker  #$&#123;USER&#125;是登录的用户名</span><br><span class="line">newgrp - docker</span><br></pre></td></tr></table></figure><p>这个时候在docker version就不会说你没有权限了</p><h2 id="2-尝试运行镜像"><a href="#2-尝试运行镜像" class="headerlink" title="2.尝试运行镜像"></a>2.尝试运行镜像</h2><blockquote><p>测试下docker是不是能用，先运行一个镜像吧</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure><p>如果第一次运行它，他将去docker仓库下载hello-world这个镜像，然后在运行。你就会看到输出hello world docker之类的文字。</p><h2 id="3-打包自己的项目"><a href="#3-打包自己的项目" class="headerlink" title="3.打包自己的项目"></a>3.打包自己的项目</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn run build</span><br></pre></td></tr></table></figure><p>打包为一个正常的dist文件夹，这也是常用发布的文件夹。</p><h2 id="4-在linux系统安装nginx"><a href="#4-在linux系统安装nginx" class="headerlink" title="4.在linux系统安装nginx"></a>4.在linux系统安装nginx</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull nginx</span><br></pre></td></tr></table></figure><p>这个时候就是在docker仓库中拉取nginx并且安装</p><p>运行nginx</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 80:80 nginx</span><br></pre></td></tr></table></figure><p>将80端口映射到80端口，启动nginx</p><p>这个时候我们可以输入linux本机的ip地址，可以查看到nginx正常的欢迎页面。那么只需要将打包的dist文件放入nginx的html文件夹中，并且更改nginx的配置即可访问打包好的项目。</p><h2 id="5-将dist文件和nginx关联起来"><a href="#5-将dist文件和nginx关联起来" class="headerlink" title="5.将dist文件和nginx关联起来"></a>5.将dist文件和nginx关联起来</h2><blockquote><p>创建3个文件夹，以下创建的文件夹都是在home这个文件夹下面</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir html</span><br><span class="line">mkdir conf</span><br><span class="line">mkdir logs</span><br></pre></td></tr></table></figure><p>我们将dist的文件放入html文件夹里面，同时在conf文件夹中创建nginx.conf文件，里面是nginx的常用配置，将文件的指向改为/home/html/index.html，不清楚nginx的可以去看看nginx的文档。然后我们运行命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 80:80 --name nginx -v &#x2F;home&#x2F;orange&#x2F;html:&#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html -v &#x2F;home&#x2F;orange&#x2F;conf&#x2F;nginx.conf:&#x2F;etc&#x2F;nginx.conf  -v &#x2F;home&#x2F;orange&#x2F;logs:&#x2F;var&#x2F;log&#x2F;nginx nginx</span><br></pre></td></tr></table></figure><p>打开浏览器，输入本机IP地址加上端口80就可以访问了。</p><h2 id="6-创建镜像"><a href="#6-创建镜像" class="headerlink" title="6.创建镜像"></a>6.创建镜像</h2><blockquote><p>以上都是在容器运行，事实上还是到打包为镜像，上传到仓库中，用户在仓库中拉取，即可运行。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker build -t test:02</span><br><span class="line">       镜像名：版本号</span><br></pre></td></tr></table></figure><p>不用用docker commit 这个不会将你的项目打包在镜像中。<br>等一会就会告诉你镜像打包好了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><p>查看本地镜像是否有打包好的。</p><h2 id="7-标记镜像"><a href="#7-标记镜像" class="headerlink" title="7.标记镜像"></a>7.标记镜像</h2><blockquote><p>对于打包好的镜像，需要对其打上标签，方便更新。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker tag test:02 orangeed&#x2F;test:00</span><br><span class="line">                  容器名称   作者&#x2F;数据库：标签</span><br></pre></td></tr></table></figure><h2 id="8-发布镜像"><a href="#8-发布镜像" class="headerlink" title="8.发布镜像"></a>8.发布镜像</h2><blockquote><p>将本地打包并且标记好的镜像发布到仓库中。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker login</span><br></pre></td></tr></table></figure><p>首先需要登录到docker中，没有账号的需要去创建一个。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker push orangeed&#x2F;test:02</span><br><span class="line">     作者&#x2F; 数据库：标签</span><br></pre></td></tr></table></figure><p>将本地的镜像发布到仓库中。这个时候也可以打开docker hub查看刚刚发布的镜像。</p><h2 id="9-下载运行镜像"><a href="#9-下载运行镜像" class="headerlink" title="9.下载运行镜像"></a>9.下载运行镜像</h2><blockquote><p>将发布的镜像下载下来运行看是否可以使用。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 80:80 -it -d orangeed&#x2F;test:02</span><br></pre></td></tr></table></figure><p>在浏览器中输入ip＋端口号即可访问。</p><h2 id="10-docker常用命令"><a href="#10-docker常用命令" class="headerlink" title="10.docker常用命令"></a>10.docker常用命令</h2><p>docker搜索镜像<br>docker search [镜像名称]</p><p>docker下载镜像<br>docker pull [镜像名称]</p><p>docker运行命令<br>docker run -p 80:80 nginx</p><p>docker run -d -p 80:80 –name nginx -v /home/orange/html:/usr/share/nginx/html -v /home/orange/conf/nginx.conf:/etc/nginx.conf  -v /home/orange/logs:/var/log/nginx nginx</p><p>docker查看镜像<br>docker images</p><p>docker查看运行的镜像<br>docker ps<br>docker ps -a</p><p>docker停止运行<br>docker stop [id]</p><p>docker删除运行容器<br>docker rm [id]</p><p>docker全部停止容器<br>docker stop $(docker ps -a | awk ‘{ print $1}’ | tail -n +2)</p><p>docker全部删除容器<br>docker rm $(docker ps -a | awk ‘{ print $1}’ | tail -n +2)</p><p>docker删除本地镜像<br>docker image rm [id]<br>docker rmi -f [id] （强制删除）</p><p>docker打包镜像<br>docker build -t test:02<br>           镜像名：版本号</p><p>docker commit -a “orangecj.com” -m “test version” testvue nginx:vue<br>                        作者                            备注              容器名称   标签<br>-a : 作者<br>-m: 备注<br>容器名称<br>标签</p><p>docker标签<br>docker tag testvue orangeed/test:01<br>                  容器名称   作者/数据库：标签</p><p>docker发布镜像<br>docker push orangeed/test:01<br>         作者/ 数据库：标签</p><p>docker运行自己的镜像<br>docker run -p 80:80 -it -d orangeed/test:01</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>New Year | 和星星⭐看尽长安花</title>
      <link href="newYear1/"/>
      <url>newYear1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src= "/img/loading.gif" data-lazy-src="../img/longlogo.jpg" alt="logo"></p><h2 id="春风得意马蹄疾，一日看尽长安花"><a href="#春风得意马蹄疾，一日看尽长安花" class="headerlink" title="春风得意马蹄疾，一日看尽长安花"></a>春风得意马蹄疾，一日看尽长安花</h2><p>我很久以前都在想着年后要找宝宝，可是疫情的原因，有点不太方便，不过我也没买回杭州的车票，就想等着，等等看，我一定要去西安找宝宝。终于让我逮到了这一天。就像是当年的孟郊一样，高兴的像个小孩子吧。</p><p>2021年2月18日，农历初六，我踏上了最早的动车，终于在临近中午到达了西安，这将是我以后可能会定居的城市呀，我打量着这座我下半辈子需要生活的城市。感觉也挺好。</p><h2 id="小槛锁玫瑰，群芳次第催"><a href="#小槛锁玫瑰，群芳次第催" class="headerlink" title="小槛锁玫瑰，群芳次第催"></a>小槛锁玫瑰，群芳次第催</h2><p>生活总得有点调味点，才会有滋有味。想象中的我，应该是手拿鲜花，在车站等到了宝宝来接我，我递给鲜花，抱着宝宝不放手。可现实总是差了点。由于时间问题，我订的玫瑰花🌹也没有如愿以偿的送给宝宝，这是我这么大以来第二次买花送人，第一次还是去年我妈生日的时候。比较遗憾。</p><p>刘昊然，宝宝的idol，在和宝宝吃了点小吃以后，拉着方向感迷的宝宝往小马影城赶。本来想喝着奶茶，吃着爆米花看电影来着，居然影院不让带食物进去，于是没了爆米花，奶茶也是一杯放我帽子，一杯我放在怀里偷摸摸的带进去的。像极了火车站买手机诈骗的坏人，哈哈哈哈哈哈，最后还是边看着刘昊然边喝奶茶，也还算是满足了吧。</p><p><img src= "/img/loading.gif" data-lazy-src="../img/2021/2/2.jpg" alt="唐人街探案3"></p><p>金莎国际、赛格、小寨、大雁塔，一个个西安地标性的位置以及建筑物。</p><p>周生生、周大生、周大福、DR、老凤祥，一家家的珠宝店。</p><p>都留下了我们的背影，还记得六爪钻戒，还记得心形钻戒，还记得星星钻戒，还有经典钻戒。</p><h2 id="倭堕低梳髻，连绢细扫眉"><a href="#倭堕低梳髻，连绢细扫眉" class="headerlink" title="倭堕低梳髻，连绢细扫眉"></a>倭堕低梳髻，连绢细扫眉</h2><p>初次见你的时候，淡淡的眼影，别致的发型，刚好与头型相得益彰。</p><p>第二天的你，高高的马尾，显得天生丽质。<br><img src= "/img/loading.gif" data-lazy-src="../img/2021/2/7.jpg" alt="高高的马尾"></p><p>低低的马尾，显得温文尔雅。<br><img src= "/img/loading.gif" data-lazy-src="../img/2021/2/6.jpg" alt="低低的马尾"></p><h2 id="红豆生南国，春来发几枝"><a href="#红豆生南国，春来发几枝" class="headerlink" title="红豆生南国，春来发几枝"></a>红豆生南国，春来发几枝</h2><p>离别总是那么的不舍，送你到车站，看着你上车，看着车开了，看着车消失在马路的尽头。眼泪总是那么的不争气，也不知道是风太大了，还是水喝多了，总是止不住的流了出来。最怕分别，所以最怕别人看我离开的背影，以至于我总是看着别人离开才选择离开。</p><p>红豆生南国，春来发几枝。愿君多采撷，此物最相思。</p><p>我想熬过了异地，那便是通往幸福的星光大道。</p><blockquote><p><a href="https://orangecj.cn/photos/2021/202102">相册传送门</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 新年 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> New Year </tag>
            
            <tag> 牛年大吉 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>监控视频 | 网页展示监控视频</title>
      <link href="monitor/"/>
      <url>monitor/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src= "/img/loading.gif" data-lazy-src="https://s1.ax1x.com/2020/07/03/NjyaGV.jpg" alt="logo"></p><blockquote><p>前段时间，因为项目需要，需要在网页端现实监控实时画面，但是摄像头的控件只支持IE浏览器，所以抛弃了摄像头本身的控件，选择自己去实现。</p></blockquote><p><strong style='font-style:oblique;color:orange'>大致的思路就是通过推流拉流的形式实现，中间开一个服务器来支持，想着想着就感觉是写一个简单的直播demo。</strong> </p><h2 id="1-服务器"><a href="#1-服务器" class="headerlink" title="1.服务器"></a>1.服务器</h2><p>没有安装http-server的话，得先安装一个。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add http-server</span><br></pre></td></tr></table></figure><p>有安装http-server的话，直接运行就好了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http-server</span><br></pre></td></tr></table></figure><p>这样就开启了一个服务器。</p><h2 id="2-jsmpeg"><a href="#2-jsmpeg" class="headerlink" title="2.jsmpeg"></a>2.jsmpeg</h2><p>下载jsmpeg,进入文件夹，运行websocket-relay.js文件<br>可以理解为 node websocket-relay.js 密钥 推流端口 拉流端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node websocket-relay.js cj123456 8081 8082</span><br></pre></td></tr></table></figure><h2 id="3-ffmpeg"><a href="#3-ffmpeg" class="headerlink" title="3.ffmpeg"></a>3.ffmpeg</h2><p>下载ffmpeg，同时设置好他的环境变量，这里不会设置环境变量的话，可以自行谷歌“ffmpeg 环境变量”<br>视频转换 ffmpeg -i “视频地址” -q 0 -f mpegts -codec:v mpeg1video -s 1366x768 推流地址(这里的地址就是127.0.0.1，端口号上上面服务器监听的，后面的是jsmepg设置的密钥)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i &quot;rtsp:&#x2F;&#x2F;admin:cj123456@192.168.60.2&#x2F;h264&#x2F;ch1&#x2F;main&#x2F;av_stream&quot; -q 0 -f mpegts -codec:v mpeg1video -s 1366x768 http:&#x2F;&#x2F;127.0.0.1:8081&#x2F;cj123456</span><br></pre></td></tr></table></figure><p>ffmpeg的具体参数可以在官网查看</p><blockquote><p>传送门 <a href="https://ffmpeg.org/ffmpeg.html">ffmpeg</a></p></blockquote><h2 id="4-现实监控画面"><a href="#4-现实监控画面" class="headerlink" title="4.现实监控画面"></a>4.现实监控画面</h2><p>简单的例子，我们可以打开jsmpeg中的一个demo。</p><p>修改地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var url &#x3D; &#39;ws:&#x2F;&#x2F;&#39;+document.location.hostname+&#39;:8082&#x2F;&#39;; </span><br><span class="line">改为</span><br><span class="line">var url &#x3D; &#39;ws:&#x2F;&#x2F;127.0.0.1:8082&#x2F;&#39;;</span><br></pre></td></tr></table></figure><p>就可以显示实时的监控画面了。但是这也只是一个简单的实现，当监控的画面多了以后，按照这样的思路，我们需要开很多的进程，同时，监听的端口不一样，页面所对应的监控画面的端口也不一样，这样就需要用node去实现监听，动态改变端口，实现一个页面显示多个监控画面。</p><h2 id="5-视频地址"><a href="#5-视频地址" class="headerlink" title="5.视频地址"></a>5.视频地址</h2><p>不同的视频监控设备的视频编码不同，地址也不一样的。比如我用的海康威视设备。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rtsp:&#x2F;&#x2F;username:password@&lt;ipaddress&gt;&#x2F;&lt;videotype&gt;&#x2F;ch&lt;number&gt;&#x2F;&lt;streamtype&gt;</span><br></pre></td></tr></table></figure><blockquote><p>传送门 <a href="https://hkrobot.hikvision.com/servlet/WXShow?action=sac&wxcId=63&sysNum=145716889796196&FromUserName=oNNCAjhEEHsBeiMXvFxAmDph71JI&sId=236075&subId=218733">海康威视视频地址参数</a></p></blockquote><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>还有个知识点<span style='color:orange'>v-bind=”$attrs”</span>，在对二次封装的时候特别好用，可以不用写很多的props了，同样的还有<span style='color:orange'>v-on=”$listeners”</span> 。永远的神，以后的二次封装，我可能不会写props了，除非必要！！！！</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 监控 </tag>
            
            <tag> 网页版 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>热更新 | electron热更新2</title>
      <link href="update2/"/>
      <url>update2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src= "/img/loading.gif" data-lazy-src="https://s1.ax1x.com/2020/07/03/NjyaGV.jpg" alt="logo"></p><blockquote><p>上次写的文章，关于热更新有点问题。所以重新写了一下。先创建一个txt文件，写入现在的版本号，在打开客户端的时候，检查更新，对比本地的版本号，大于时下载更新，关闭当前软件，同时开启子进程，调用bat脚本，替换原来的asar文件，bat重启客户端。</p></blockquote><p>心情不是很好，我直接上代码吧。</p><h2 id="index-js入口文件，也就是运行的文件"><a href="#index-js入口文件，也就是运行的文件" class="headerlink" title="index.js入口文件，也就是运行的文件"></a>index.js入口文件，也就是运行的文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">const pack &#x3D; require(&#39;.&#x2F;src&#x2F;main&#39;)</span><br><span class="line"></span><br><span class="line">const config &#x3D; &#123;</span><br><span class="line">    width: 1280, &#x2F;&#x2F; 窗口的宽度</span><br><span class="line">    minWidth: 1280, &#x2F;&#x2F; 窗口最小宽度</span><br><span class="line">    height: 960, &#x2F;&#x2F; 窗口高度</span><br><span class="line">    minHeight: 960, &#x2F;&#x2F; 窗口最小高度</span><br><span class="line">    frame: true, &#x2F;&#x2F; 是否有边框</span><br><span class="line">    center: true, &#x2F;&#x2F; 窗口是否在中心</span><br><span class="line">    minimizable: true, &#x2F;&#x2F;窗口是否可以最小化</span><br><span class="line">    maximizable: true, &#x2F;&#x2F;窗口是否可以最大化</span><br><span class="line">    url: &#39;.&#x2F;dist&#x2F;index.html&#39;, &#x2F;&#x2F; 打包地址</span><br><span class="line">    isWeb: false, &#x2F;&#x2F; 是否是网站</span><br><span class="line">    openDevTools: false, &#x2F;&#x2F; 是否打开开发者工具</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pack(config)</span><br></pre></td></tr></table></figure><h2 id="main主文件"><a href="#main主文件" class="headerlink" title="main主文件"></a>main主文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br></pre></td><td class="code"><pre><span class="line">&#39;use strict&#39;</span><br><span class="line">const electron &#x3D; require(&#39;electron&#39;)</span><br><span class="line">const path &#x3D; require(&quot;path&quot;);</span><br><span class="line">const _axios &#x3D; require(&#39;axios&#39;)</span><br><span class="line">const update &#x3D; require(&#39;.&#x2F;dowload&#39;)</span><br><span class="line">const packages &#x3D; require(&#39;..&#x2F;package.json&#39;)</span><br><span class="line">const fs &#x3D; require(&#39;fs&#39;)</span><br><span class="line">const util &#x3D; require(&quot;util&quot;)</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * @param &#123;Object&#125; config </span><br><span class="line"> * @example </span><br><span class="line"> * config &#x3D; &#123;</span><br><span class="line"> *    width: 1280, &#x2F;&#x2F; 窗口的宽度 number</span><br><span class="line"> *    minWidth: 1280, &#x2F;&#x2F; 窗口最小宽度 number</span><br><span class="line"> *    height: 960, &#x2F;&#x2F; 窗口高度 number</span><br><span class="line"> *    minHeight: 960, &#x2F;&#x2F; 窗口最小高度 number</span><br><span class="line"> *    frame: true, &#x2F;&#x2F; 是否有边框 boolean</span><br><span class="line"> *    center: true, &#x2F;&#x2F; 窗口是否在中心 boolean </span><br><span class="line"> *    minimizable: true, &#x2F;&#x2F;窗口是否可以最小化 boolean</span><br><span class="line"> *    maximizable: true, &#x2F;&#x2F;窗口是否可以最大化 boolean</span><br><span class="line"> *    url:&#39;http:&#x2F;&#x2F;www.zhihu.com&#39; &#x2F;&#x2F; 打包地址 string</span><br><span class="line"> *    isWeb: true,&#x2F;&#x2F; 是否是网站 boolean</span><br><span class="line"> *    openDevTools: true, &#x2F;&#x2F; 是否打开开发者工具 boolean</span><br><span class="line"> *&#x2F;</span><br><span class="line"></span><br><span class="line">const pack &#x3D; (config) &#x3D;&gt; &#123;</span><br><span class="line">  const &#123;</span><br><span class="line">    app,</span><br><span class="line">    BrowserWindow,</span><br><span class="line">    Menu,</span><br><span class="line">    dialog,</span><br><span class="line">  &#125; &#x3D; electron</span><br><span class="line">  const dirPath &#x3D; path.join(__dirname)</span><br><span class="line">  const dirPathO &#x3D; path.join(__dirname).split(&#39;resources&#39;)</span><br><span class="line">  console.log(&#39;dirPathO&#39;, dirPathO);</span><br><span class="line">  const relativePath &#x3D; dirPathO[0];</span><br><span class="line"></span><br><span class="line">  let myWindow &#x3D; null</span><br><span class="line">  &#x2F;&#x2F; 创建窗口</span><br><span class="line">  const createWindow &#x3D; () &#x3D;&gt; &#123;</span><br><span class="line">    &#x2F;&#x2F; 隐藏菜单栏</span><br><span class="line">    Menu.setApplicationMenu(null)</span><br><span class="line">    &#x2F;&#x2F; 创建浏览器窗口</span><br><span class="line">    const win &#x3D; new BrowserWindow(&#123;</span><br><span class="line">      &#x2F;&#x2F; icon: &#39;.&#x2F;dist&#x2F;login_logo.png&#39;, &#x2F;&#x2F;窗口图标</span><br><span class="line">      width: config.width,</span><br><span class="line">      minWidth: config.minWidth,</span><br><span class="line">      height: config.height,</span><br><span class="line">      minHeight: config.minHeight,</span><br><span class="line">      &#x2F;&#x2F; resizable: config.resizable, &#x2F;&#x2F;禁止改变主窗口尺寸</span><br><span class="line">      &#x2F;&#x2F; fullscreen: config.resizable,&#x2F;&#x2F;全屏</span><br><span class="line">      frame: config.frame, &#x2F;&#x2F;有边框</span><br><span class="line">      &#x2F;&#x2F; transparent: config.transparent,&#x2F;&#x2F;透明边框</span><br><span class="line">      center: config.center, &#x2F;&#x2F;窗口是否在中心</span><br><span class="line">      minimizable: config.minimizable, &#x2F;&#x2F;窗口是否可以最小化.</span><br><span class="line">      maximizable: config.maximizable, &#x2F;&#x2F;窗口是否可以最大化.</span><br><span class="line">      &#x2F;&#x2F; kiosk: config.kiosk, &#x2F;&#x2F;使用kiosk模式。如果使用kiosk模式，应用程序将全屏显示，并且阻止用户离开应用</span><br><span class="line">      webPreferences: &#123;</span><br><span class="line">        nodeIntegration: false, &#x2F;&#x2F;是否在Web工作器中启用了Node集成</span><br><span class="line">        webSecurity: false,</span><br><span class="line">        &#x2F;&#x2F; preload: __dirname + &#39;&#x2F;preload.js&#39;</span><br><span class="line">        &#x2F;&#x2F; preload: path.join(app.getAppPath(), &#39;preload.js&#39;),</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">    myWindow &#x3D; win</span><br><span class="line">    &#x2F;&#x2F;窗口默认最大化</span><br><span class="line">    win.maximize()</span><br><span class="line">    win.show()</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 并且为你的应用加载index.html</span><br><span class="line">    if (config.isWeb) &#123;</span><br><span class="line">      win.loadURL(config.url)</span><br><span class="line"></span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      win.loadFile(config.url)</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(&#39;version&#39;, process.versions.chrome);</span><br><span class="line">    &#x2F;&#x2F; 打开开发者工具</span><br><span class="line">    if (config.openDevTools) &#123;</span><br><span class="line">      win.webContents.openDevTools()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F;检测是否是只打开了一个窗口程序</span><br><span class="line">  const gotTheLock &#x3D; app.requestSingleInstanceLock()</span><br><span class="line">  if (!gotTheLock) &#123;</span><br><span class="line">    app.quit()</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    app.on(&#39;second-instance&#39;, (event, commandLine, workingDirectory) &#x3D;&gt; &#123;</span><br><span class="line">      &#x2F;&#x2F; 当运行第二个实例时,将会聚焦到myWindow这个窗口</span><br><span class="line">      if (myWindow) &#123;</span><br><span class="line">        if (myWindow.isMinimized()) myWindow.restore()</span><br><span class="line">        myWindow.focus()</span><br><span class="line">        myWindow.show()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 创建 myWindow, 加载应用的其余部分, etc...</span><br><span class="line">    app.on(&#39;ready&#39;, () &#x3D;&gt; &#123;&#125;)</span><br><span class="line">    &#x2F;&#x2F; This method will be called when Electron has finished</span><br><span class="line">    &#x2F;&#x2F; initialization and is ready to create browser windows.</span><br><span class="line">    &#x2F;&#x2F; 部分 API 在 ready 事件触发后才能使用。</span><br><span class="line">    app.whenReady().then(createWindow)</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; Quit when all windows are closed.</span><br><span class="line">    app.on(&#39;window-all-closed&#39;, () &#x3D;&gt; &#123;</span><br><span class="line">      &#x2F;&#x2F; 在 macOS 上，除非用户用 Cmd + Q 确定地退出，</span><br><span class="line">      &#x2F;&#x2F; 否则绝大部分应用及其菜单栏会保持激活。</span><br><span class="line">      if (process.platform !&#x3D;&#x3D; &#39;darwin&#39;) &#123;</span><br><span class="line">        app.quit()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    app.on(&#39;activate&#39;, () &#x3D;&gt; &#123;</span><br><span class="line">      &#x2F;&#x2F; 在macOS上，当单击dock图标并且没有其他窗口打开时，</span><br><span class="line">      &#x2F;&#x2F; 通常在应用程序中重新创建一个窗口。</span><br><span class="line">      if (BrowserWindow.getAllWindows().length &#x3D;&#x3D;&#x3D; 0) &#123;</span><br><span class="line">        createWindow()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; 获取版本号</span><br><span class="line">  const versionPath &#x3D; relativePath + &#39;&#x2F;version.txt&#39;</span><br><span class="line">  const logoPath &#x3D; relativePath + &#39;&#x2F;log.txt&#39;</span><br><span class="line"></span><br><span class="line">  fs.readFile(versionPath, &#39;utf8&#39;, (err, data) &#x3D;&gt; &#123;</span><br><span class="line">    if (!err) &#123;</span><br><span class="line">      console.log(&#39;data&#39;, data.toString());</span><br><span class="line">      up(data.toString())</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      console.log(err);</span><br><span class="line">      const localVersion &#x3D; app.getVersion()</span><br><span class="line">      fs.writeFile(versionPath, localVersion, err &#x3D;&gt; &#123;</span><br><span class="line">        if (err) &#123;</span><br><span class="line">          const error &#x3D; util.inspect(err, &#123;</span><br><span class="line">            depth: null</span><br><span class="line">          &#125;)</span><br><span class="line">          fs.appendFile(path, &#96;错误信息：$&#123;error&#125;&#96;, (err) &#x3D;&gt; &#123;</span><br><span class="line">            if (err) throw err</span><br><span class="line">            console.log(&#96;错误信息已经写入$&#123;path&#125;中！&#96;)</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          console.log(&#39;Version save success!&#39;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  &#x2F;&#x2F; 热更新检查</span><br><span class="line">  const up &#x3D; (localVersion) &#x3D;&gt; &#123;</span><br><span class="line">    _axios(&#123;</span><br><span class="line">      url: &#39;http:&#x2F;&#x2F;183.134.197.66:13010&#x2F;zjg_3s&#x2F;version&#39;,</span><br><span class="line">      method: &#39;get&#39;,</span><br><span class="line">      params: &#123;</span><br><span class="line">        code: &#39;1&#39;,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;).then(res &#x3D;&gt; &#123;</span><br><span class="line">      console.log(&#39;res&#39;, res.data.errorCode);</span><br><span class="line">      &#x2F;&#x2F; const path &#x3D; relativePath + &#39;&#x2F;log.txt&#39;</span><br><span class="line">      const resStr &#x3D; util.inspect(res.data, &#123;</span><br><span class="line">        depth: null</span><br><span class="line">      &#125;)</span><br><span class="line">      const packagesStr &#x3D; util.inspect(packages, &#123;</span><br><span class="line">        depth: null</span><br><span class="line">      &#125;)</span><br><span class="line">      fs.appendFile(logoPath, &#96;$&#123;resStr&#125;,$&#123;packagesStr&#125;*****$&#123;dirPath&#125;,$&#123;localVersion&#125;&#96;, (error) &#x3D;&gt; &#123;</span><br><span class="line">        if (error) throw error</span><br><span class="line">        console.log(&#96;成功已经写入$&#123;path&#125;中！&#96;)</span><br><span class="line">      &#125;)</span><br><span class="line">      if (res.data.errorCode &#x3D;&#x3D; 0) &#123;</span><br><span class="line">        console.log(&#39;localVersion&#39;, localVersion);</span><br><span class="line">        const onlineVersion &#x3D; res.data.data.name</span><br><span class="line">        console.log(&#39;onlineVersion&#39;, onlineVersion);</span><br><span class="line"></span><br><span class="line">        fs.appendFile(logoPath, &#96;下载更新！&#96;, (error) &#x3D;&gt; &#123;</span><br><span class="line">          if (error) throw error</span><br><span class="line">          console.log(&#96;成功已经写入$&#123;logoPath&#125;中！&#96;)</span><br><span class="line">        &#125;)</span><br><span class="line">        if (localVersion &lt; onlineVersion) &#123;</span><br><span class="line"></span><br><span class="line">          const dialogOpts &#x3D; &#123;</span><br><span class="line">            type: &#39;info&#39;,</span><br><span class="line">            buttons: [&#39;立即更新&#39;, &#39;稍后更新&#39;],</span><br><span class="line">            title: &#39;更新提醒&#39;,</span><br><span class="line">            message: &#96;您有新的更新!&#96;,</span><br><span class="line">            &#x2F;&#x2F; detail: &#96;内容如下：&#96; + &#96;$&#123;dirPathO&#125;,$&#123;packages&#125;,$&#123;localVersion&#125;,$&#123;onlineVersion&#125;&#96;</span><br><span class="line">            detail: &#96;内容如下：&#96; + &#96;$&#123;res.data.data.attach&#125;&#96;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          dialog.showMessageBox(dialogOpts).then((returnValue) &#x3D;&gt; &#123;</span><br><span class="line">            console.log(&#39;returnValue&#39;, returnValue);</span><br><span class="line">            if (returnValue.response &#x3D;&#x3D;&#x3D; 0) &#123;</span><br><span class="line"></span><br><span class="line">              update(res.data.data.httpPath)</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; In this file you can include the rest of your app&#39;s specific main process</span><br><span class="line">  &#x2F;&#x2F; code. 也可以拆分成几个文件，然后用 require 导入。</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">module.exports &#x3D; pack</span><br></pre></td></tr></table></figure><h2 id="dowload更新文件"><a href="#dowload更新文件" class="headerlink" title="dowload更新文件"></a>dowload更新文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;文件下载</span><br><span class="line">const fs &#x3D; require(&#39;fs&#39;)</span><br><span class="line">const path &#x3D; require(&quot;path&quot;);</span><br><span class="line">const axios &#x3D; require(&#39;axios&#39;)</span><br><span class="line">const fsPromises &#x3D; require(&#39;fs&#39;).promises</span><br><span class="line">&#x2F;&#x2F; const package &#x3D; require(&#39;..&#x2F;package.json&#39;)</span><br><span class="line">const &#123;</span><br><span class="line">    exec,</span><br><span class="line">    spawn</span><br><span class="line">&#125; &#x3D; require(&#39;child_process&#39;);</span><br><span class="line">const electron &#x3D; require(&#39;electron&#39;)</span><br><span class="line"></span><br><span class="line">const &#123;</span><br><span class="line">    app,</span><br><span class="line">&#125; &#x3D; electron</span><br><span class="line">var util &#x3D; require(&quot;util&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 获取真实的绝对路径</span><br><span class="line">const dirPathO &#x3D; path.join(__dirname).split(&#39;resources&#39;)</span><br><span class="line">console.log(&#39;dirPathO&#39;, dirPathO);</span><br><span class="line">const relativePath &#x3D; dirPathO[0];</span><br><span class="line"></span><br><span class="line">console.log(&#39;relativePath&#39;, relativePath);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 获取一个绝对路径的文件夹</span><br><span class="line">const dirPath &#x3D; path.join(relativePath, &quot;&#x2F;dowload&quot;);</span><br><span class="line">console.log(&#39;dirPath&#39;, dirPath);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 热更新</span><br><span class="line">const update &#x3D; (url) &#x3D;&gt; &#123;</span><br><span class="line">    fs.access(dirPath, (err) &#x3D;&gt; &#123;</span><br><span class="line">        console.log(&#39;err&#39;, err);</span><br><span class="line">        if (err) &#123; &#x2F;&#x2F;如果文件不存在，就创建这个文件</span><br><span class="line">            fs.mkdir(dirPath, (err) &#x3D;&gt; &#123;</span><br><span class="line">                console.log(err);</span><br><span class="line">                if (!err) &#123;</span><br><span class="line">                    console.log(&#39;dowload file create success!&#39;);</span><br><span class="line">                    dowloadFile(url)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            &#x2F;&#x2F;如果这个文件已经存在</span><br><span class="line">            dowloadFile(url)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">let num &#x3D; 0</span><br><span class="line">&#x2F;&#x2F; 文件重命名</span><br><span class="line">const reName &#x3D; (name, newName, suffix) &#x3D;&gt; &#123;</span><br><span class="line">    num++</span><br><span class="line">    console.log(&#39;begin to rename!&#39;);</span><br><span class="line">    fs.rename(relativePath + &#39;dowload\\&#39; + name, relativePath + &#39;dowload\\&#39; + newName + &#39;.&#39; + suffix, err &#x3D;&gt; &#123;</span><br><span class="line">        console.log(&#39;error&#39;, err);</span><br><span class="line"></span><br><span class="line">        if (err) &#123;</span><br><span class="line">            if (num &lt;&#x3D; 1) &#123;</span><br><span class="line">                console.log(&#39;rename again!&#39;);</span><br><span class="line">                reName(name, newName, suffix)</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                console.log(&#39;rename failed!&#39;, err);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            console.log(&#39;rename success!&#39;);</span><br><span class="line">            reviseVersion(name, newName, suffix)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 调用脚本复制</span><br><span class="line">const shellReName &#x3D; (name, newName, suffix) &#x3D;&gt; &#123;</span><br><span class="line">    let bat, shellPath</span><br><span class="line">    if (suffix &#x3D;&#x3D; &#39;asar&#39;) &#123;</span><br><span class="line">        shellPath &#x3D; path.join(relativePath, &quot;&#x2F;copy.bat&quot;);</span><br><span class="line">        console.log(&#39;shellPath&#39;, shellPath);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        shellPath &#x3D; path.join(relativePath, &quot;&#x2F;copyzjg.bat&quot;);</span><br><span class="line">        console.log(&#39;shellPath&#39;, shellPath);</span><br><span class="line">    &#125;</span><br><span class="line">    bat &#x3D; spawn(shellPath);</span><br><span class="line"></span><br><span class="line">    bat.stdout.on(&#39;data&#39;, (data) &#x3D;&gt; &#123;</span><br><span class="line">        app.quit()</span><br><span class="line">        console.log(&#39;data&#39;, data);</span><br><span class="line">        &#x2F;&#x2F; copyFile(newName, suffix)</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    bat.stderr.on(&#39;data&#39;, (data) &#x3D;&gt; &#123;</span><br><span class="line">        console.error(&#39;error&#39;, data);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    bat.on(&#39;exit&#39;, (code) &#x3D;&gt; &#123;</span><br><span class="line">        console.log(&#96;子进程退出，退出码 $&#123;code&#125;&#96;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 移动文件</span><br><span class="line">const copyFile &#x3D; (newName, suffix) &#x3D;&gt; &#123;</span><br><span class="line">    const copiedPath &#x3D; relativePath + &#39;dowload&#x2F;&#39; + newName + &#39;.&#39; + suffix;</span><br><span class="line">    const resultPath &#x3D; relativePath + &#39;resources&#x2F;&#39; + newName + &#39;.&#39; + suffix;</span><br><span class="line">    fsPromises.copyFile(copiedPath, resultPath)</span><br><span class="line">        .then(() &#x3D;&gt; &#123;</span><br><span class="line">            console.log(&#39;copyFile success!&#39;);</span><br><span class="line">            openProgram()</span><br><span class="line">            &#x2F;&#x2F; reviseVersion(name)</span><br><span class="line">            &#x2F;&#x2F; reName(name, newName, suffix)</span><br><span class="line">            &#x2F;&#x2F; shellReName(copiedPath, resultPath, name, newName, suffix)</span><br><span class="line">        &#125;).catch((err) &#x3D;&gt; &#123;</span><br><span class="line">            console.log(&#39;copyFile failed!&#39;);</span><br><span class="line">            console.log(err);</span><br><span class="line">        &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 修改package的version号码</span><br><span class="line">const reviseVersion &#x3D; (name, newName, suffix) &#x3D;&gt; &#123;</span><br><span class="line"></span><br><span class="line">    let path &#x3D; relativePath + &#39;&#x2F;log.txt&#39;</span><br><span class="line"></span><br><span class="line">    const versionPath &#x3D; relativePath + &#39;&#x2F;version.txt&#39;</span><br><span class="line">    fs.writeFile(versionPath, name, err &#x3D;&gt; &#123;</span><br><span class="line">        if (err) &#123;</span><br><span class="line">            const error &#x3D; util.inspect(err, &#123;</span><br><span class="line">                depth: null</span><br><span class="line">            &#125;)</span><br><span class="line">            fs.appendFile(path, &#96;错误信息：$&#123;error&#125;&#96;, (err) &#x3D;&gt; &#123;</span><br><span class="line">                if (err) throw err</span><br><span class="line">                console.log(&#96;错误信息已经写入$&#123;path&#125;中！&#96;)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            console.log(&#39;Version save success!&#39;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    shellReName(name, newName, suffix)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 打开指定文件程序</span><br><span class="line">const openProgram &#x3D; () &#x3D;&gt; &#123;</span><br><span class="line">    const path &#x3D; relativePath + &#39;&#x2F;jixin.exe&#39;</span><br><span class="line">    exec(path, (err, data) &#x3D;&gt; &#123;</span><br><span class="line">        if (err) &#123;</span><br><span class="line">            console.error(&#39;exe open failed&#39;, err);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        console.log(&#39;exe open success&#39;, data.toString());</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 下载文件</span><br><span class="line">const dowloadFile &#x3D; (url) &#x3D;&gt; &#123;</span><br><span class="line">    console.log(&#39;url&#39;, url);</span><br><span class="line">    &#x2F;&#x2F; 获取文件名称</span><br><span class="line">    &#x2F;&#x2F; const name &#x3D; url.split(&#39;&#x2F;&#39;).pop().split(&#39;_&#39;)[0] + &#39;.&#39; + url.split(&#39;&#x2F;&#39;).pop().split(&#39;_&#39;).pop().split(&#39;.&#39;).pop()</span><br><span class="line">    const name &#x3D; url.split(&#39;&#x2F;&#39;).pop().split(&#39;_&#39;)[0]</span><br><span class="line">    console.log(name);</span><br><span class="line">    &#x2F;&#x2F; 获取文件后缀</span><br><span class="line">    const suffix &#x3D; url.split(&#39;&#x2F;&#39;).pop().split(&#39;_&#39;).pop().split(&#39;.&#39;).pop()</span><br><span class="line">    console.log(&#39;suffix&#39;, suffix);</span><br><span class="line">    &#x2F;&#x2F; const filePath &#x3D; path.resolve(&#39;.&#x2F;src&#x2F;dowload&#39;, name)</span><br><span class="line">    &#x2F;&#x2F; console.log(&#39;filePath&#39;, filePath);</span><br><span class="line">    &#x2F;&#x2F; return</span><br><span class="line">    axios(&#123;</span><br><span class="line">            method: &#39;get&#39;,</span><br><span class="line">            url,</span><br><span class="line">            timeout: 10 * 60 * 1000,</span><br><span class="line">            maxContentLength: Infinity,</span><br><span class="line">            responseType: &#39;stream&#39;,</span><br><span class="line">        &#125;)</span><br><span class="line">        .then(res &#x3D;&gt; &#123;</span><br><span class="line">            &#x2F;&#x2F; console.log(res.data);</span><br><span class="line">            console.log(&#39;relativePath&#39;, relativePath);</span><br><span class="line">            let w, newName;</span><br><span class="line">            w &#x3D; fs.createWriteStream(relativePath + &#39;\\dowload\\&#39; + name)</span><br><span class="line"></span><br><span class="line">            res.data.pipe(w)</span><br><span class="line">            return new Promise((resolve, reject) &#x3D;&gt; &#123;</span><br><span class="line">                w.on(&#39;finish&#39;, () &#x3D;&gt; &#123;</span><br><span class="line">                    console.log(&#39;This file is over end!&#39;);</span><br><span class="line">                    if (suffix &#x3D;&#x3D; &#39;asar&#39;) &#123;</span><br><span class="line">                        newName &#x3D; &#39;app&#39;</span><br><span class="line"></span><br><span class="line">                        &#x2F;&#x2F; 复制文件</span><br><span class="line">                        &#x2F;&#x2F; copyFile(relativePath + &#39;dowload&#x2F;&#39; + name, relativePath + &#39;resources&#x2F;&#39; + name, name, newName, suffix)</span><br><span class="line">                        &#x2F;&#x2F; 调用脚本重命名</span><br><span class="line">                        &#x2F;&#x2F; shellReName(relativePath + &#39;dowload&#x2F;&#39; + name, relativePath + &#39;resources&#x2F;&#39; + name, name, newName, suffix)</span><br><span class="line">                        &#x2F;&#x2F; copyFile(relativePath + &#39;dowload&#x2F;&#39; + newName + &#39;.&#39; + suffix, relativePath + &#39;resources&#x2F;&#39; + newName + &#39;.&#39; + suffix, name)</span><br><span class="line">                        &#x2F;&#x2F; 重命名下载的文件</span><br><span class="line">                        reName(name, newName, suffix)</span><br><span class="line">                        &#x2F;&#x2F; w &#x3D; fs.createWriteStream(relativePath + &#39;resources&#x2F;&#39; + name + &#39;.&#39; + suffix)</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        newName &#x3D; &#39;zjg_2d&#39;</span><br><span class="line"></span><br><span class="line">                        &#x2F;&#x2F; 复制文件</span><br><span class="line">                        &#x2F;&#x2F; copyFile(relativePath + &#39;dowload&#x2F;&#39; + name, relativePath + &#39;static&#x2F;&#39; + name, name, newName, suffix)</span><br><span class="line">                        &#x2F;&#x2F; 调用脚本重命名</span><br><span class="line">                        &#x2F;&#x2F; shellReName(relativePath + &#39;dowload&#x2F;&#39; + name, relativePath + &#39;resources&#x2F;&#39; + name, name, newName, suffix)</span><br><span class="line">                        &#x2F;&#x2F; copyFile(relativePath + &#39;dowload&#x2F;&#39; + newName + &#39;.&#39; + suffix, relativePath + &#39;static&#x2F;&#39; + newName + &#39;.&#39; + suffix, name)</span><br><span class="line">                        &#x2F;&#x2F; 重命名下载的文件</span><br><span class="line">                        reName(name, newName, suffix)</span><br><span class="line">                        &#x2F;&#x2F; w &#x3D; fs.createWriteStream(relativePath + &#39;static&#x2F;&#39; + name + &#39;.&#39; + suffix)</span><br><span class="line">                    &#125;</span><br><span class="line">                    resolve()</span><br><span class="line">                &#125;)</span><br><span class="line">                w.on(&#39;error&#39;, (err) &#x3D;&gt; &#123;</span><br><span class="line">                    console.log(&#39;error&#39;, err);</span><br><span class="line">                    reject()</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">module.exports &#x3D; update</span><br></pre></td></tr></table></figure><h2 id="copy脚本文件"><a href="#copy脚本文件" class="headerlink" title="copy脚本文件"></a>copy脚本文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line"></span><br><span class="line">set filePath&#x3D;%~dp0</span><br><span class="line">echo %filePath%</span><br><span class="line">cd %filePath%</span><br><span class="line">%~d0</span><br><span class="line"></span><br><span class="line">cd %filePath%dowload</span><br><span class="line"></span><br><span class="line">copy %filePath%dowload\app.asar %filePath%resources</span><br><span class="line">echo &#39;copy success&#39;</span><br><span class="line"></span><br><span class="line">echo &#39;open exe&#39;</span><br><span class="line">cd %filePath%</span><br><span class="line">start jixin.exe</span><br></pre></td></tr></table></figure><p><strong style='color:red;font-size:16px'>这是一个完整的思路，并且经过我实践过了，测试了很久，暂无问题的方案。</strong><br><strong style='color:orange;font-size:20px'>我是一个菜鸡程序员，勿喷。有更好的想法，可以互相交流</strong></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> electron </tag>
            
            <tag> node </tag>
            
            <tag> 热更新 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>New Year | 和星星⭐一起跨年</title>
      <link href="newYear/"/>
      <url>newYear/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src= "/img/loading.gif" data-lazy-src="../img/longlogo.jpg" alt="logo"></p><h2 id="约定"><a href="#约定" class="headerlink" title="约定"></a>约定</h2><p>早在圣诞后就约定一起在杭州跨年，从约定到杭州，等待了几天的时间。</p><p>我们约定一起看电影跨年，一起在元旦玩耍，一起度过在一起第一年的元旦。</p><h2 id="到达"><a href="#到达" class="headerlink" title="到达"></a>到达</h2><p>2020年的31号，星星⭐就请假，早上坐车从大老远的地方来到了杭州，在我工作的楼下等我。我心怀愧疚，让她久等了。</p><h2 id="玩耍"><a href="#玩耍" class="headerlink" title="玩耍"></a>玩耍</h2><p>当晚，《温暖的抱抱》成为了我们跨年的主题，同时还有B站的五月天陪我们度过了难忘的元旦。</p><p><img src= "/img/loading.gif" data-lazy-src="../img/2021/1/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20210103193922.jpg" alt="电影票"></p><p>2021年的第一天，朝着四季青批发市场闲逛。下午去超市买了很多的吃的，重温五月天的线上演唱会。</p><p>2021年的第二天，带上漂亮的星星⭐逛了西湖。</p><p><img src= "/img/loading.gif" data-lazy-src="../img/2021/1/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20210103193847.jpg" alt="逛西湖"></p><p><img src= "/img/loading.gif" data-lazy-src="../img/2021/1/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20210103193950.jpg" alt="合照"></p><p>傍晚，某些人突然哭了，我一脸懵逼，又不知道如何安慰，就只能一个劲的问问怎么了。毫无经验。某些人说太麻烦我了，其实我在想，恋爱中的人，不就是双方互相麻烦吗？有开心有难过，很正常，不要觉得麻烦我什么的。毕竟我们还有以后，以后的我们是一家人，怎么还能说麻烦自家人的事情呢。又因为食物难吃难过，我很不明白食物难吃，为什么会难过，经过这样某些人的回答，我才知道是这样的，于是列出了食物黑名单，终于不难过了。</p><p>2021年的第三天，温存了很久之后，很不舍的要选择分别了，每次的分别总是最难受的时候，总觉得不能将自己的背影留给别人。所以我还是看别人转身离开的时刻好了。</p><p>回家的路上，被风沙迷了眼，不停的揉着，仿佛这样就可以驱赶离别的悲伤似的。</p><p>到家。欢声笑语的房间也似乎冷清了下来，左手边也少了一个人，不太习惯。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>当星星⭐一个人大老远的一个人找我的时候，我只想着，这世上可能是真的有唯美食与女子不可辜负。</p><p>希望最后能够尽早的结束异地恋吧。</p><blockquote><p><a href="https://orangecj.cn/photos/2021/202101">相册传送门</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 跨年 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> New Year </tag>
            
            <tag> 跨年 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rules | rules表单验证的参数问题</title>
      <link href="rules/"/>
      <url>rules/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src= "/img/loading.gif" data-lazy-src="https://s1.ax1x.com/2020/07/03/NjyaGV.jpg" alt="logo"></p><blockquote><p>在使用element或者antdv等ui的时候，基本很容易忽略一个东西，rules的参数，其中有个type参数。至少我可能忽略了….</p></blockquote><h2 id="type"><a href="#type" class="headerlink" title="type"></a>type</h2><p><strong style='color:orange;font-size:16px' >string</strong>: Must be of type string. This is the default type.这个是默认值</p><p><strong style='color:orange;font-size:16px' >number</strong>: Must be of type number.</p><p><strong style='color:orange;font-size:16px' >boolean</strong>: Must be of type boolean.</p><p><strong style='color:orange;font-size:16px' >method</strong>: Must be of type function.</p><p><strong style='color:orange;font-size:16px' >regexp</strong>: Must be an instance of RegExp or a string that does not generate an exception when creating a new RegExp.</p><p><strong style='color:orange;font-size:16px' >integer</strong>: Must be of type number and an integer.</p><p><strong style='color:orange;font-size:16px' >float</strong>: Must be of type number and a floating point number.</p><p><strong style='color:orange;font-size:16px' >array</strong>: Must be an array as determined by Array.isArray.</p><p><strong style='color:orange;font-size:16px' >object</strong>: Must be of type object and not Array.isArray.</p><p><strong style='color:orange;font-size:16px' >enum</strong>: Value must exist in the enum.也就是绑定的数据必须是这里面的，比如[c1,c2],那么v-model绑定的数据只能是c1或者c2</p><p><strong style='color:orange;font-size:16px' >date</strong>: Value must be valid as determined by Date</p><p><strong style='color:orange;font-size:16px' >url</strong>: Must be of type url.</p><p><strong style='color:orange;font-size:16px' >hex</strong>: Must be of type hex.</p><p><strong style='color:orange;font-size:16px' >email</strong>: Must be of type email.<br>any: Can be any type.</p><h2 id="Required"><a href="#Required" class="headerlink" title="Required"></a>Required</h2><p>属性为true是，该字段为必填项</p><h2 id="Pattern"><a href="#Pattern" class="headerlink" title="Pattern"></a>Pattern</h2><p>该 pattern 规则属性指示一个正则表达式的值必须匹配，才能通过验证。</p><h2 id="min、max"><a href="#min、max" class="headerlink" title="min、max"></a>min、max</h2><p>规定最小长度与最大长度</p><h2 id="len"><a href="#len" class="headerlink" title="len"></a>len</h2><p>指定确切长度。（如果该len属性与min和max范围属性结合使用，len则优先。）</p><h2 id="whitespace"><a href="#whitespace" class="headerlink" title="whitespace"></a>whitespace</h2><p>验证是否只有空格,必选时，空格是否会被视为错误</p><h2 id="Transform"><a href="#Transform" class="headerlink" title="Transform"></a>Transform</h2><p>有时有必要在验证之前转换值，以强制或以某种方式对其进行清理。为此 transform ，向验证规则添加一个function。在验证之前，先转换属性，然后将其重新分配给源对象，以更改该属性的值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import Schema from &#39;async-validator&#39;;</span><br><span class="line">const descriptor &#x3D; &#123;</span><br><span class="line">  name: &#123;</span><br><span class="line">    type: &#39;string&#39;,</span><br><span class="line">    required: true,</span><br><span class="line">    pattern: &#x2F;^[a-z]+$&#x2F;,</span><br><span class="line">    transform(value) &#123;</span><br><span class="line">      return value.trim();</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">const validator &#x3D; new Schema(descriptor);</span><br><span class="line">const source &#x3D; &#123; name: &#39; user  &#39; &#125;;</span><br><span class="line">validator.validate(source)</span><br><span class="line">  .then(() &#x3D;&gt; assert.equal(source.name, &#39;user&#39;));</span><br></pre></td></tr></table></figure><h2 id="Messages"><a href="#Messages" class="headerlink" title="Messages"></a>Messages</h2><p>效验不通过显示</p><h2 id="asyncValidator"><a href="#asyncValidator" class="headerlink" title="asyncValidator"></a>asyncValidator</h2><p>可以为指定的字段自定义异步验证功能</p><h2 id="validator"><a href="#validator" class="headerlink" title="validator"></a>validator</h2><p>可以为指定字段自定义验证功能</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">let numberLengthSix &#x3D; (rule, value, callback) &#x3D;&gt; &#123;</span><br><span class="line">  if(String(value).length &gt; 6) &#123;</span><br><span class="line">    callback(&#39;超出限制&#39;)</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    callback()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 校验</span><br><span class="line">numberLengthSix: [</span><br><span class="line">  &#123;validator: numberLengthSix, trigger: &#39;blur&#39;&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> UI框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rules </tag>
            
            <tag> 表单验证 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>侧滑 | h5打包后的app侧滑解决方案</title>
      <link href="Sideslip/"/>
      <url>Sideslip/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src= "/img/loading.gif" data-lazy-src="https://s1.ax1x.com/2020/07/03/NjyaGV.jpg" alt="logo"></p><blockquote><p>上一次自己打包app，遇到了侧滑直接退出程序，并没有返回上一页，当时我也没有在意，没想着解决。但是最近公司需求，需要打包一个手机app，不可能侧滑就直接退出，应该是侧滑返回上一页。当在首页的时候，侧滑一次，提醒你再滑一次退出程序。</p></blockquote><h2 id="直接上代码"><a href="#直接上代码" class="headerlink" title="直接上代码"></a>直接上代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  document.addEventListener(&#39;plusready&#39;, () &#x3D;&gt; &#123; </span><br><span class="line">    &#x2F;&#x2F;等待plus ready后再调用5+ API：</span><br><span class="line">    let first &#x3D; null;</span><br><span class="line">    const webview &#x3D; plus.webview.currentWebview();</span><br><span class="line">    plus.key.addEventListener(&#39;backbutton&#39;, () &#x3D;&gt; &#123;</span><br><span class="line">      webview.canBack((e) &#x3D;&gt; &#123;</span><br><span class="line">        if (e.canBack) &#123;</span><br><span class="line">          webview.back();</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          &#x2F;&#x2F;首次按键，提示‘再按一次退出应用’</span><br><span class="line">          if (!first) &#123;</span><br><span class="line">            &#x2F;&#x2F;获取第一次点击的时间戳</span><br><span class="line">            first &#x3D; new Date().getTime(); </span><br><span class="line">            &#x2F;&#x2F;通过H5+ API 调用Android 上的toast 提示框</span><br><span class="line">            plus.nativeUI.toast(&quot;再按一次退出应用&quot;, &#123;</span><br><span class="line">              duration: &#39;short&#39;</span><br><span class="line">            &#125;); </span><br><span class="line">            setTimeout(() &#x3D;&gt; &#123;</span><br><span class="line">              first &#x3D; null;</span><br><span class="line">            &#125;, 1000);</span><br><span class="line">          &#125; else &#123;</span><br><span class="line">            if (new Date().getTime() - first &lt; 1000) &#123; </span><br><span class="line">                &#x2F;&#x2F;获取第二次点击的时间戳, 两次之差 小于 1000ms 说明1s点击了两次,</span><br><span class="line">                plus.runtime.quit(); &#x2F;&#x2F;退出应用</span><br><span class="line">                &#x2F;&#x2F; webview.close(); &#x2F;&#x2F;hide,quit</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>对于vue项目来说，只需要将其放在public-&gt;index.html的body标签下面。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> app </tag>
            
            <tag> 侧滑 </tag>
            
            <tag> h5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我们 | 故事的开始</title>
      <link href="ours/"/>
      <url>ours/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src= "/img/loading.gif" data-lazy-src="https://s1.ax1x.com/2020/07/03/NjyaGV.jpg" alt="logo"></p><h2 id="1-又是一个小白"><a href="#1-又是一个小白" class="headerlink" title="1.又是一个小白"></a>1.又是一个小白</h2><p>2020年10月26日，下午。</p><p><a href="https://imgchr.com/i/rQSYZT"><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2020/12/15/rQSYZT.png" alt="rQSYZT.png"></a></p><p>又是一个小白，真不知道什么时候，大家才能都会这些简单的操作。害！算了，我先写代码了，忙的很，有空再给她说吧。</p><p><a href="https://imgchr.com/i/rQSNoF"><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2020/12/15/rQSNoF.png" alt="rQSNoF.png"></a></p><p>哎？正版的office激活都是要钱的啊，这个铁憨憨不会花钱自己激活去了吧？那我给她说说可以破解的。</p><p>咦~~居然有人想帮我排版公众号？真的假的啊。这人行不行啊？感觉突然有人帮我排版，会不会影响我自己的生活啊？不过这样的话，那也是挺好的，还有人压榨聊天了。不是吧，这个人怎么啥都不会的啊，就和我大一的时候一样。好菜。</p><p><a href="https://imgchr.com/i/rQSai4"><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2020/12/15/rQSai4.png" alt="rQSai4.png"></a><br>不是吧，说好帮我排版的，我咋还要交啊，连基本的排版都不会吗？我也不是很会的啊，完了，完了，完了，两个菜鸡遇到了。</p><p>咦？？？咋问房租干嘛？你要来杭州发展？那指不定还可以约饭了。</p><p><a href="https://imgchr.com/i/rQSdJJ"><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2020/12/15/rQSdJJ.png" alt="rQSdJJ.png"></a></p><p>卧槽，不是吧，网友要线下见面了？好像没经历过。有点小紧张呢。后来你没有回我消息，我也都忘了这些事情。直到双11那天，我都回到了杭州好几天了。突然又找上了我。又愉快的聊了两天。</p><p>后面我没找你，你没找我，我突然也就习惯了，只是还记得我貌似有个御用排版师。</p><h2 id="2-我的排版师呢"><a href="#2-我的排版师呢" class="headerlink" title="2.我的排版师呢"></a>2.我的排版师呢</h2><p>某些人让我见面后慢慢说，那我就挑一些吧。</p><p>2020年11月21日。某些人好些天没找我了，于是我拿着写好的稿子找人，结果….</p><p>啊？我的个人介绍？啊？介绍对象嘛？真好，我是要脱单了嘛？哈哈哈哈。</p><p>我以为是会把某些人的室友或者同学介绍给我呢，结果等了会，啥都没有。</p><p>那算了吧，反正也是习惯了呢。没想到的是，后面居然天天聊天，甚至步上了情侣的生活。</p><h2 id="3-你居然在喝酒"><a href="#3-你居然在喝酒" class="headerlink" title="3.你居然在喝酒"></a>3.你居然在喝酒</h2><p>2020年11月22日傍晚。我和我朋友在下沙高沙吃饭。我还在停车场，刚准备开车回去。</p><p><a href="https://imgchr.com/i/rQSGLV"><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2020/12/15/rQSGLV.jpg" alt="rQSGLV.jpg"></a></p><p>你说你很尬，我想到几个大老爷们叫小女生去家里吃饭，就感觉很不正常，感觉有些危险。我就直说了，让你注意安全，有事打电话。我还真给我开车的朋友说，我这个御用排版师，被叫到领导家吃饭，我感觉很不合适。朋友让我别担心，国企的这帮人不敢乱来的。于是我就好多了….</p><h1 id="4-more"><a href="#4-more" class="headerlink" title="4.more"></a>4.more</h1><p>更多的，咱见面说吧。</p><p>未完待续….</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 爱情 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 你 </tag>
            
            <tag> 我 </tag>
            
            <tag> 我们 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>热更新 | electron热更新</title>
      <link href="update/"/>
      <url>update/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src= "/img/loading.gif" data-lazy-src="https://s1.ax1x.com/2020/07/03/NjyaGV.jpg" alt="logo"></p><blockquote><p>因为公司项目需求，需要做一个检查更新的功能，但是不需要让用户重新安装，只需要替换更新的部分，重启应用完成更新。</p></blockquote><h2 id="开始分析"><a href="#开始分析" class="headerlink" title="开始分析"></a>开始分析</h2><ul><li>我最开始是这么想的<br><a href="https://imgchr.com/i/D3PJpt"><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2020/11/21/D3PJpt.jpg" alt="D3PJpt.jpg"></a></li></ul><p>我觉得逻辑没问题啊，于是开始查找资料，发现electron有自带的热更新，研究了一上午，发现好像并没有怎么好用啊，还发现似乎自能保存在c盘，那用户不安装在c盘咋整。果断换了方法。</p><p>于是开始研究用node实现，发现似乎可行，操作难度不大，我整理了好多的问题，都给一一解决了，但是最后一步把我卡死了。因为文件资源在占用中，不能替换，必须关闭程序，那么关闭程序就不会执行后面替换的代码了。一度陷入了沉思。</p><p>于是我又整理了下思路。</p><ul><li>然后就有了想法<br><a href="https://imgchr.com/i/D3PY1P"><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2020/11/21/D3PY1P.jpg" alt="D3PY1P.jpg"></a><br><a href="https://imgchr.com/i/D3PNX8"><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2020/11/21/D3PNX8.jpg" alt="D3PNX8.jpg"></a></li></ul><p>1、听说electron对于app与app.asar的优先度不同，app优先于app.asar，可以借这个方法来实现。但是好像比较绕，那就先放弃了。</p><p>2、似乎可以监听electron的close事件，然后执行程序。不过用了下，用处不大，因为我app.quit()后，进程关闭了。</p><p>3、通过子进程实现。先打开子进程，然后关闭主进程，执行子进程的代码。或者通过子进程调用另外的文件。感觉可行。</p><h2 id="最后的思路"><a href="#最后的思路" class="headerlink" title="最后的思路"></a>最后的思路</h2><p>重新收拾心情，轻装上路。</p><blockquote><p>先判断版本号，如果本地的版本号小于线上版本号，获取文件地址，然后下载文件地址的文件，以流的形式下载并写入临时文件，当然，如果不存在临时文件的话，先创建一个，有的话，就直接写入。然后对保存的文件进行重命名。最后执行子进程调用bat复制文件的命令，同时关闭主进程，然后打开程序，完成更新。如果是后端服务，则调用bat执行stop服务的命令，然后复制文件，执行start的命令，最后打开程序，以完成更新。</p></blockquote><h2 id="最后的文件代码"><a href="#最后的文件代码" class="headerlink" title="最后的文件代码"></a>最后的文件代码</h2><p>这里是main.js入口文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">const electron &#x3D; require(&#39;electron&#39;)</span><br><span class="line">const path &#x3D; require(&quot;path&quot;);</span><br><span class="line">const _axios &#x3D; require(&#39;axios&#39;)</span><br><span class="line">const update &#x3D; require(&#39;.&#x2F;dowload&#39;)</span><br><span class="line"></span><br><span class="line">const &#123;</span><br><span class="line">        app,</span><br><span class="line">        BrowserWindow,</span><br><span class="line">        Menu,</span><br><span class="line">        dialog,</span><br><span class="line">    &#125; &#x3D; electron</span><br><span class="line"></span><br><span class="line">...这里是创建electron窗口，以及锁死窗口登操作...</span><br><span class="line"></span><br><span class="line"> &#x2F;&#x2F; 热更新检查</span><br><span class="line">    _axios(&#123;</span><br><span class="line">        url: &#39;xxxxx&#x2F;version&#39;, &#x2F;&#x2F;这里是检查更新的地址</span><br><span class="line">        method: &#39;get&#39;,</span><br><span class="line">    &#125;).then(res &#x3D;&gt; &#123;</span><br><span class="line">        if (res.data.errorCode &#x3D;&#x3D; 0) &#123;</span><br><span class="line">            const localVersion &#x3D; app.getVersion()</span><br><span class="line">            console.log(&#39;localVersion&#39;, localVersion);</span><br><span class="line">            const onlineVersion &#x3D; res.data.data.name</span><br><span class="line">            console.log(&#39;onlineVersion&#39;, onlineVersion);</span><br><span class="line">            console.log(&#39; res.data.data.httpPath&#39;, res.data.data.httpPath)</span><br><span class="line">            if (localVersion &lt; onlineVersion) &#123;</span><br><span class="line">                const dialogOpts &#x3D; &#123;</span><br><span class="line">                    type: &#39;info&#39;,</span><br><span class="line">                    buttons: [&#39;立即更新&#39;, &#39;稍后更新&#39;],</span><br><span class="line">                    title: &#39;更新提醒&#39;,</span><br><span class="line">                    message: &#96;您有新的更新!&#96;,</span><br><span class="line">                    detail: &#96;内容如下：&#96; + &#96;$&#123;res.data.data.attach&#125;&#96;</span><br><span class="line">                &#125;</span><br><span class="line">                dialog.showMessageBox(dialogOpts).then((returnValue) &#x3D;&gt; &#123;</span><br><span class="line">                    if (returnValue.response &#x3D;&#x3D;&#x3D; 0) &#123;</span><br><span class="line">                        update(res.data.data.httpPath)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里是dowload.js下载更新的文件，里面有一些无用的代码，懒得删….</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;&#x2F;文件下载</span><br><span class="line">const fs &#x3D; require(&#39;fs&#39;)</span><br><span class="line">const path &#x3D; require(&quot;path&quot;);</span><br><span class="line">const axios &#x3D; require(&#39;axios&#39;)</span><br><span class="line">const fsPromises &#x3D; require(&#39;fs&#39;).promises</span><br><span class="line">const package &#x3D; require(&#39;..&#x2F;package.json&#39;)</span><br><span class="line">const &#123;</span><br><span class="line">    exec,</span><br><span class="line">    spawn</span><br><span class="line">&#125; &#x3D; require(&#39;child_process&#39;);</span><br><span class="line">const electron &#x3D; require(&#39;electron&#39;)</span><br><span class="line"></span><br><span class="line">const &#123;</span><br><span class="line">    app,</span><br><span class="line">&#125; &#x3D; electron</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 获取真实的绝对路径</span><br><span class="line">const dirPathO &#x3D; path.join(__dirname).split(&#39;resources&#39;)</span><br><span class="line">console.log(&#39;dirPathO&#39;, dirPathO);</span><br><span class="line">const relativePath &#x3D; dirPathO[0];</span><br><span class="line"></span><br><span class="line">console.log(&#39;relativePath&#39;, relativePath);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 获取一个绝对路径的文件夹</span><br><span class="line">const dirPath &#x3D; path.join(relativePath, &quot;&#x2F;dowload&quot;);</span><br><span class="line">console.log(&#39;dirPath&#39;, dirPath);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 热更新</span><br><span class="line">const update &#x3D; (url) &#x3D;&gt; &#123;</span><br><span class="line">    fs.access(dirPath, (err) &#x3D;&gt; &#123;</span><br><span class="line">        console.log(&#39;err&#39;, err);</span><br><span class="line">        if (err) &#123; &#x2F;&#x2F;如果文件不存在，就创建这个文件</span><br><span class="line">            fs.mkdir(dirPath, (err) &#x3D;&gt; &#123;</span><br><span class="line">                console.log(err);</span><br><span class="line">                if (!err) &#123;</span><br><span class="line">                    console.log(&#39;dowload file create success!&#39;);</span><br><span class="line">                    dowloadFile(url)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            &#x2F;&#x2F;如果这个文件已经存在</span><br><span class="line">            dowloadFile(url)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">let num &#x3D; 0</span><br><span class="line">    &#x2F;&#x2F; 文件重命名</span><br><span class="line">const reName &#x3D; (name, newName, suffix) &#x3D;&gt; &#123;</span><br><span class="line">    num++</span><br><span class="line">    console.log(&#39;begin to rename!&#39;);</span><br><span class="line">    fs.rename(relativePath + &#39;dowload&#x2F;&#39; + name, relativePath + &#39;dowload&#x2F;&#39; + newName + &#39;.&#39; + suffix, err &#x3D;&gt; &#123;</span><br><span class="line">            console.log(&#39;error&#39;, err);</span><br><span class="line">            if (err) &#123;</span><br><span class="line">                if (num &lt;&#x3D; 1) &#123;</span><br><span class="line">                    console.log(&#39;rename again!&#39;);</span><br><span class="line">                    reName(name, newName, suffix)</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    console.log(&#39;rename failed!&#39;, err);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                console.log(&#39;rename success!&#39;);</span><br><span class="line">                reviseVersion(name, newName, suffix)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 调用脚本复制</span><br><span class="line">const shellReName &#x3D; (name, newName, suffix) &#x3D;&gt; &#123;</span><br><span class="line">    let bat, shellPath</span><br><span class="line">    if (suffix &#x3D;&#x3D; &#39;asar&#39;) &#123;</span><br><span class="line">        shellPath &#x3D; path.join(relativePath, &quot;&#x2F;copy.bat&quot;);</span><br><span class="line">        console.log(&#39;shellPath&#39;, shellPath);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        shellPath &#x3D; path.join(relativePath, &quot;&#x2F;copyzjg.bat&quot;);</span><br><span class="line">        console.log(&#39;shellPath&#39;, shellPath);</span><br><span class="line">    &#125;</span><br><span class="line">    bat &#x3D; spawn(shellPath);</span><br><span class="line"></span><br><span class="line">    bat.stdout.on(&#39;data&#39;, (data) &#x3D;&gt; &#123;</span><br><span class="line">        app.quit()</span><br><span class="line">        console.log(&#39;data&#39;, data);</span><br><span class="line">        &#x2F;&#x2F; copyFile(newName, suffix)</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    bat.stderr.on(&#39;data&#39;, (data) &#x3D;&gt; &#123;</span><br><span class="line">        console.error(&#39;error&#39;, data);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    bat.on(&#39;exit&#39;, (code) &#x3D;&gt; &#123;</span><br><span class="line">        console.log(&#96;子进程退出，退出码 $&#123;code&#125;&#96;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 移动文件</span><br><span class="line">const copyFile &#x3D; (newName, suffix) &#x3D;&gt; &#123;</span><br><span class="line">    const copiedPath &#x3D; relativePath + &#39;dowload&#x2F;&#39; + newName + &#39;.&#39; + suffix;</span><br><span class="line">    const resultPath &#x3D; relativePath + &#39;resources&#x2F;&#39; + newName + &#39;.&#39; + suffix;</span><br><span class="line">    fsPromises.copyFile(copiedPath, resultPath)</span><br><span class="line">        .then(() &#x3D;&gt; &#123;</span><br><span class="line">            console.log(&#39;copyFile success!&#39;);</span><br><span class="line">            openProgram()</span><br><span class="line">        &#125;).catch((err) &#x3D;&gt; &#123;</span><br><span class="line">            console.log(&#39;copyFile failed!&#39;);</span><br><span class="line">            console.log(err);</span><br><span class="line">        &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 修改package的version号码</span><br><span class="line">const reviseVersion &#x3D; (name, newName, suffix) &#x3D;&gt; &#123;</span><br><span class="line">    package.version &#x3D; name</span><br><span class="line">    console.log(&#39;version change success!&#39;);</span><br><span class="line">    console.log(&#39;package&#39;, package);</span><br><span class="line">    shellReName(name, newName, suffix)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 打开指定文件程序</span><br><span class="line">const openProgram &#x3D; () &#x3D;&gt; &#123;</span><br><span class="line">    const path &#x3D; relativePath + &#39;&#x2F;jixin.exe&#39;</span><br><span class="line">    exec(path, (err, data) &#x3D;&gt; &#123;</span><br><span class="line">        if (err) &#123;</span><br><span class="line">            console.error(&#39;exe open failed&#39;, err);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        console.log(&#39;exe open success&#39;, data.toString());</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 下载文件</span><br><span class="line">const dowloadFile &#x3D; (url) &#x3D;&gt; &#123;</span><br><span class="line">    console.log(&#39;url&#39;, url);</span><br><span class="line">    &#x2F;&#x2F; 获取文件名称</span><br><span class="line">    const name &#x3D; url.split(&#39;&#x2F;&#39;).pop().split(&#39;_&#39;)[0]</span><br><span class="line">    console.log(name);</span><br><span class="line">    &#x2F;&#x2F; 获取文件后缀</span><br><span class="line">    const suffix &#x3D; url.split(&#39;&#x2F;&#39;).pop().split(&#39;_&#39;).pop().split(&#39;.&#39;).pop()</span><br><span class="line">    console.log(&#39;suffix&#39;, suffix);</span><br><span class="line"></span><br><span class="line">    axios(&#123;</span><br><span class="line">            method: &#39;get&#39;,</span><br><span class="line">            url,</span><br><span class="line">            timeout: 10 * 60 * 1000,</span><br><span class="line">            maxContentLength: Infinity,</span><br><span class="line">            responseType: &#39;stream&#39;,</span><br><span class="line">        &#125;)</span><br><span class="line">        .then(res &#x3D;&gt; &#123;</span><br><span class="line">            let w, newName;</span><br><span class="line">            w &#x3D; fs.createWriteStream(relativePath + &#39;dowload&#x2F;&#39; + name)</span><br><span class="line"></span><br><span class="line">            res.data.pipe(w)</span><br><span class="line">            return new Promise((resolve, reject) &#x3D;&gt; &#123;</span><br><span class="line">                w.on(&#39;finish&#39;, () &#x3D;&gt; &#123;</span><br><span class="line">                    console.log(&#39;This file is over end!&#39;);</span><br><span class="line">                    if (suffix &#x3D;&#x3D; &#39;asar&#39;) &#123;</span><br><span class="line">                        newName &#x3D; &#39;app&#39;</span><br><span class="line">                        &#x2F;&#x2F; 重命名下载的文件</span><br><span class="line">                        reName(name, newName, suffix)</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        newName &#x3D; &#39;zjg_2d&#39;</span><br><span class="line"></span><br><span class="line">                        &#x2F;&#x2F; 重命名下载的文件</span><br><span class="line">                        reName(name, newName, suffix)</span><br><span class="line">                    &#125;</span><br><span class="line">                    resolve()</span><br><span class="line">                &#125;)</span><br><span class="line">                w.on(&#39;error&#39;, (err) &#x3D;&gt; &#123;</span><br><span class="line">                    console.log(&#39;error&#39;, err);</span><br><span class="line">                    reject()</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">module.exports &#x3D; update</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里是copy.bat</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line"></span><br><span class="line">set filePath&#x3D;%~dp0</span><br><span class="line">echo %filePath%</span><br><span class="line">cd %filePath%</span><br><span class="line">%~d0</span><br><span class="line"></span><br><span class="line">cd %filePath%</span><br><span class="line">start xxx.exe</span><br></pre></td></tr></table></figure><p>嗯，就这样执行了热更新的操作，不用用户执行卸载安装等操作，只需要同意更新就完事了。</p><h2 id="我是菜鸡前端"><a href="#我是菜鸡前端" class="headerlink" title="我是菜鸡前端"></a>我是菜鸡前端</h2><p><strong style='color:orange;font-size:20px'>我是一个菜鸡程序员，勿喷。有更好的想法，可以互相交流</strong></p><blockquote><p>完善的链接传送门 <a href="https://orangecj.cn/update2">完善的热更新</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> electron </tag>
            
            <tag> node </tag>
            
            <tag> 热更新 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>app | 如何制作一个app</title>
      <link href="app/"/>
      <url>app/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src= "/img/loading.gif" data-lazy-src="https://s1.ax1x.com/2020/07/03/NjyaGV.jpg" alt="logo"></p><blockquote><p>用了taro后，突然想试试做一个app，先做一个Android的试试，因为我只要Android的手机，调试方便。</p></blockquote><h2 id="创建app项目"><a href="#创建app项目" class="headerlink" title="创建app项目"></a>创建app项目</h2><p>听说HBuilder做app很方便，于是我用了HBuilder。</p><blockquote><p>文件 –&gt; 新建 –&gt; 项目 –&gt; 5+APP(默认模板)</p></blockquote><p>得到一个空的项目，在 <em>manifest.json</em>这个文件中，入口文件默认是index.html。</p><p>图标设置，选择一个png图标。</p><p>启动界面设置，可以自定义启动图，也是png格式的图片。</p><p>其他的可以不用修改，默认就好了。</p><h2 id="写app项目"><a href="#写app项目" class="headerlink" title="写app项目"></a>写app项目</h2><p>先将一个网页打包为app吧。</p><p>在index.html中，加载网页。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">window.onload &#x3D; function() &#123;</span><br><span class="line">    location.href &#x3D; &#39;http:&#x2F;&#x2F;www.orangecj.cn&#39;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也可以将已经完成的项目打包，将入口文件改为你打包好的入口文件，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dist&#x2F;index.html</span><br></pre></td></tr></table></figure><h2 id="运行app"><a href="#运行app" class="headerlink" title="运行app"></a>运行app</h2><p>我们需要真机调试，看看效果如何。</p><p>将自己手机调为开发者模式。</p><p>打开usb调试。</p><p>用usb将电脑和手机连接起来，手机会提示匹配啥的，允许就好了。</p><p>在HBuilder中，点击运行 –&gt; 运行到手机或者模拟器 –&gt; 运行。会在你手机上安装一个HBuilder的调试基座，安装完毕后，就可以看到效果了。如果没有自动安装，可以按照控制台的提示手动安装。</p><h2 id="打包app"><a href="#打包app" class="headerlink" title="打包app"></a>打包app</h2><blockquote><p>发行 –&gt; 原生App-云打包，打包结束后会返回一个打包的apk下载地址。下载apk，安装，就好了。当然你也可以 发行 –&gt; 原生App-查看打包状态，查看历史打包的地址等等。</p></blockquote><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p>第一个是下载的apk。</p><p>第二个是安装好的app。</p><p>第三个是打开以后的效果图。<br><img src= "/img/loading.gif" data-lazy-src="https://s1.ax1x.com/2020/10/08/006bG9.jpg" alt="效果图"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> app </category>
          
      </categories>
      
      
        <tags>
            
            <tag> app </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>taro | taro使用及结论</title>
      <link href="taro/"/>
      <url>taro/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src= "/img/loading.gif" data-lazy-src="https://s1.ax1x.com/2020/07/03/NjyaGV.jpg" alt="logo"></p><blockquote><p>前段时间用过一次uniapp，后来发现还有个同类型的<a href="https://taro-docs.jd.com/taro/docs/GETTING-STARTED">taro</a>，于是体验了一番。</p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @tarojs&#x2F;cli</span><br><span class="line"></span><br><span class="line">yarn global add @tarojs&#x2F;cli</span><br></pre></td></tr></table></figure><h2 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">taro init myApp</span><br></pre></td></tr></table></figure><p>myapp是项目名称。</p><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 微信小程序</span><br><span class="line">&quot;dev:weapp&quot;: &quot;npm run build:weapp -- --watch&quot;, </span><br><span class="line">&quot;dev:swan&quot;: &quot;npm run build:swan -- --watch&quot;,</span><br><span class="line"># 支付宝</span><br><span class="line">&quot;dev:alipay&quot;: &quot;npm run build:alipay -- --watch&quot;,</span><br><span class="line">&quot;dev:tt&quot;: &quot;npm run build:tt -- --watch&quot;,</span><br><span class="line"># 网页</span><br><span class="line">&quot;dev:h5&quot;: &quot;npm run build:h5 -- --watch&quot;,</span><br><span class="line">&quot;dev:rn&quot;: &quot;npm run build:rn -- --watch&quot;,</span><br><span class="line">&quot;dev:qq&quot;: &quot;npm run build:qq -- --watch&quot;,</span><br><span class="line">&quot;dev:jd&quot;: &quot;npm run build:jd -- --watch&quot;,</span><br><span class="line">&quot;dev:quickapp&quot;: &quot;npm run build:quickapp -- --watch&quot;</span><br></pre></td></tr></table></figure><h2 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&quot;build:weapp&quot;: &quot;taro build --type weapp&quot;,</span><br><span class="line">&quot;build:swan&quot;: &quot;taro build --type swan&quot;,</span><br><span class="line">&quot;build:alipay&quot;: &quot;taro build --type alipay&quot;,</span><br><span class="line">&quot;build:tt&quot;: &quot;taro build --type tt&quot;,</span><br><span class="line">&quot;build:h5&quot;: &quot;taro build --type h5&quot;,</span><br><span class="line">&quot;build:rn&quot;: &quot;taro build --type rn&quot;,</span><br><span class="line">&quot;build:qq&quot;: &quot;taro build --type qq&quot;,</span><br><span class="line">&quot;build:jd&quot;: &quot;taro build --type jd&quot;,</span><br><span class="line">&quot;build:quickapp&quot;: &quot;taro build --type quickapp&quot;,</span><br></pre></td></tr></table></figure><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>1.安装完taro后，报错，告诉我taro没有。</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>1.将taro添加到环境变量中，重新启动就好了。具体如何添加到环境变量中，很简单，找到你安装taro所在文件夹，将 <em>~/@tarojs\cli\bin</em>添加到变量中就行了，~是指你具体的taro所在路径。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> taro </category>
          
      </categories>
      
      
        <tags>
            
            <tag> taro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>摄像头 | 浏览器调用摄像头并实现截图保存的效果</title>
      <link href="video/"/>
      <url>video/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src= "/img/loading.gif" data-lazy-src="https://s1.ax1x.com/2020/07/03/NjyaGV.jpg" alt="logo"></p><blockquote><p>​为了在QT上实现打开摄像头，拍照等操作。就写了这个。</p></blockquote><h2 id="1-写一个vue组件"><a href="#1-写一个vue组件" class="headerlink" title="1. 写一个vue组件"></a>1. 写一个vue组件</h2><p>先写一个vue的组件，其内容基本如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-button type&#x3D;&quot;primary&quot; @click&#x3D;&quot;openVideo&quot;&gt;打开摄像头&lt;&#x2F;el-button&gt;</span><br><span class="line">&lt;el-button @click&#x3D;&quot;closeVideo&quot;&gt;关闭摄像头&lt;&#x2F;el-button&gt;</span><br><span class="line">&lt;el-button type&#x3D;&quot;danger&quot; @click&#x3D;&quot;screenshot&quot;&gt;截图&lt;&#x2F;el-button&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">  &lt;video id&#x3D;&quot;video&quot; ref&#x3D;&quot;video&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;canvas ref&#x3D;&quot;canvas&quot; width&#x3D;&quot;400&quot; height&#x3D;&quot;300&quot; style&#x3D;&quot;display:none&quot; &#x2F;&gt;</span><br><span class="line">&lt;!-- 截图展示图片 --&gt;</span><br><span class="line">&lt;img ref&#x3D;&quot;screenshot&quot;&gt;</span><br></pre></td></tr></table></figure><h2 id="2-打开摄像头"><a href="#2-打开摄像头" class="headerlink" title="2. 打开摄像头"></a>2. 打开摄像头</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 打开摄像头</span><br><span class="line">    openVideo() &#123;</span><br><span class="line">      &#x2F;&#x2F; 老的浏览器可能根本没有实现 mediaDevices，所以我们可以先设置一个空的对象</span><br><span class="line">      console.log(&quot;navigator.mediaDevices&quot;, navigator.mediaDevices);</span><br><span class="line">      if (navigator.mediaDevices &#x3D;&#x3D;&#x3D; undefined) &#123;</span><br><span class="line">        navigator.mediaDevices &#x3D; &#123;&#125;;</span><br><span class="line">      &#125;</span><br><span class="line">      &#x2F;&#x2F; 一些浏览器部分支持 mediaDevices。我们不能直接给对象设置 getUserMedia</span><br><span class="line">      &#x2F;&#x2F; 因为这样可能会覆盖已有的属性。这里我们只会在没有getUserMedia属性的时候添加它。</span><br><span class="line">      if (navigator.mediaDevices.getUserMedia &#x3D;&#x3D;&#x3D; undefined) &#123;</span><br><span class="line">        navigator.mediaDevices.getUserMedia &#x3D; constraints &#x3D;&gt; &#123;</span><br><span class="line">          &#x2F;&#x2F; 首先，如果有getUserMedia的话，就获得它</span><br><span class="line">          const getUserMedia &#x3D;</span><br><span class="line">            navigator.getUserMedia ||</span><br><span class="line">            (navigator.getUserMedia &#x3D;</span><br><span class="line">              navigator.mozGetUserMedia ||</span><br><span class="line">              navigator.webkitGetUserMedia ||</span><br><span class="line">              navigator.msGetUserMedia);</span><br><span class="line">          console.log(&quot;getUserMedia&quot;, getUserMedia);</span><br><span class="line">          &#x2F;&#x2F; 一些浏览器根本没实现它 - 那么就返回一个error到promise的reject来保持一个统一的接口</span><br><span class="line">          if (!getUserMedia) &#123;</span><br><span class="line">            return Promise.reject(new Error(&quot;该浏览器暂不支持摄像头！&quot;));</span><br><span class="line">          &#125;</span><br><span class="line">          &#x2F;&#x2F; 否则，为老的navigator.getUserMedia方法包裹一个Promise</span><br><span class="line">          return new Promise((resolve, reject) &#x3D;&gt; &#123;</span><br><span class="line">            getUserMedia.call(navigator, constraints, resolve, reject);</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;</span><br><span class="line">      const constraints &#x3D; &#123;</span><br><span class="line">        audio: true,</span><br><span class="line">        video: &#123;</span><br><span class="line">          width: &#123; ideal: 1280, max: 1920 &#125;,</span><br><span class="line">          height: &#123; ideal: 720, max: 1080 &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br><span class="line">      console.log(&quot;window.navigator&quot;, window.navigator);</span><br><span class="line">      window.navigator.mediaDevices</span><br><span class="line">        .getUserMedia(constraints)</span><br><span class="line">        .then(stream &#x3D;&gt; &#123;</span><br><span class="line">          const video &#x3D; this.$refs.video;</span><br><span class="line">          &#x2F;&#x2F; 旧的浏览器可能没有srcObject</span><br><span class="line">          if (&quot;srcObject&quot; in video) &#123;</span><br><span class="line">            video.srcObject &#x3D; stream;</span><br><span class="line">          &#125; else &#123;</span><br><span class="line">            &#x2F;&#x2F; 防止在新的浏览器里使用它，因为它已经不再支持了</span><br><span class="line">            video.src &#x3D; window.URL.createObjectURL(stream);</span><br><span class="line">          &#125;</span><br><span class="line">          video.onloadedmetadata &#x3D; e &#x3D;&gt; &#123;</span><br><span class="line">            video.play();</span><br><span class="line">          &#125;;</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(err &#x3D;&gt; &#123;</span><br><span class="line">          console.log(err.name + &quot;: &quot; + err.message);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>没错，这个代码是在mdn上的，几乎没有任何改变，例子讲的挺好的。</p><h2 id="3-截图并保存"><a href="#3-截图并保存" class="headerlink" title="3. 截图并保存"></a>3. 截图并保存</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 截图</span><br><span class="line">    screenshot() &#123;</span><br><span class="line">      &#x2F;&#x2F; 获取视频</span><br><span class="line">      const video &#x3D; this.$refs.video;</span><br><span class="line">      &#x2F;&#x2F; 获取截图的地址</span><br><span class="line">      const screenshot &#x3D; this.$refs.screenshot;</span><br><span class="line">      &#x2F;&#x2F; 获取canvas</span><br><span class="line">      const canvas &#x3D; this.$refs.canvas;</span><br><span class="line">      &#x2F;&#x2F; 渲染一个2d平面的视图</span><br><span class="line">      const ctx &#x3D; canvas.getContext(&quot;2d&quot;);</span><br><span class="line">      &#x2F;&#x2F; 设置canvas 视图文件地址和大小</span><br><span class="line">      ctx.drawImage(video, 0, 0, 400, 300);</span><br><span class="line">      &#x2F;&#x2F; 将数据转为base64赋值给img标签的src属性</span><br><span class="line">      screenshot.src &#x3D; canvas.toDataURL(&quot;image&#x2F;png&quot;);</span><br><span class="line">      console.log(&quot;screenshot.src&quot;, screenshot.src);</span><br><span class="line">      const imgData &#x3D; canvas</span><br><span class="line">        .toDataURL(&quot;image&#x2F;png&quot;)</span><br><span class="line">        .replace(&quot;image&#x2F;png&quot;, &quot;image&#x2F;octet-stream&quot;);</span><br><span class="line">      &#x2F;&#x2F; 下载图片到本地</span><br><span class="line">      const save_link &#x3D; document.createElementNS(</span><br><span class="line">        &quot;http:&#x2F;&#x2F;www.w3.org&#x2F;1999&#x2F;xhtml&quot;,</span><br><span class="line">        &quot;a&quot;</span><br><span class="line">      );</span><br><span class="line">      save_link.href &#x3D; imgData;</span><br><span class="line">      save_link.download &#x3D; &quot;file_&quot; + new Date().getTime() + &quot;.png&quot;;</span><br><span class="line">      save_link.click();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="4-关闭摄像头"><a href="#4-关闭摄像头" class="headerlink" title="4. 关闭摄像头"></a>4. 关闭摄像头</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 关闭摄像头</span><br><span class="line">    closeVideo() &#123;</span><br><span class="line">      console.log(&quot;srcObject&quot;, this.$refs.video.srcObject);</span><br><span class="line">      const srcObject &#x3D; this.$refs.video.srcObject ? this.$refs.video.srcObject.getTracks() : this.$refs.video.src.getTracks()</span><br><span class="line">      srcObject.forEach(track &#x3D;&gt; &#123;</span><br><span class="line">        track.stop();</span><br><span class="line">        this.$refs.video.src &#x3D; null;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><p>关闭摄像头，是先获取这个这个视频所在的任务，然后关闭每一个任务，并将其地址设为空。</p><h2 id="5-在electron遇到的问题"><a href="#5-在electron遇到的问题" class="headerlink" title="5. 在electron遇到的问题"></a>5. 在electron遇到的问题</h2><p>开发的时候，在electron中使用遇到调用不了摄像头的问题。经过多次debug之后，发现是http和https的原因。</p><p>所以打包好后的文件在electron中使用，是可以调用摄像头并截图保存的。</p>]]></content>
      
      
      <categories>
          
          <category> 打包 </category>
          
          <category> npm </category>
          
          <category> electron-pack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> electron </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>electron-pack | electron-pack爬坑记</title>
      <link href="electron-pack-qus/"/>
      <url>electron-pack-qus/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src= "/img/loading.gif" data-lazy-src="https://s1.ax1x.com/2020/07/03/NjyaGV.jpg" alt="logo"></p><h1 id="electron-pack-electron-pack爬坑记"><a href="#electron-pack-electron-pack爬坑记" class="headerlink" title="electron-pack | electron-pack爬坑记"></a>electron-pack | electron-pack爬坑记</h1><blockquote><p>electron-pack是我个人开发的一个方便自己使用的npm安装包。他的诞生经历了不少的坎坷。</p></blockquote><h2 id="1-app-requestSingleInstanceLock-is-not-a-function"><a href="#1-app-requestSingleInstanceLock-is-not-a-function" class="headerlink" title="1. app .requestSingleInstanceLock  is not a function"></a>1. app .requestSingleInstanceLock  is not a function</h2><p>目测原因：在require的时候，app为undefined，所以肯定是没有。</p><p>解决方案：对项目进行打包，希望将第三方插件electron引入进来。</p><h2 id="2-Can’t-resolve-‘fs’-in-‘D-packages-npm-node-modules…’"><a href="#2-Can’t-resolve-‘fs’-in-‘D-packages-npm-node-modules…’" class="headerlink" title="2. Can’t resolve ‘fs’ in ‘D:\packages\npm\node_modules…’"></a>2. Can’t resolve ‘fs’ in ‘D:\packages\npm\node_modules…’</h2><p>目测原因：在打包的时候似乎是require的问题，node和webpack都有require，但是是不一样的。(只是我的猜想，别喷)</p><p>解决方案：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">node: &#123;</span><br><span class="line">         fs: &#39;empty&#39;,</span><br><span class="line">         net:&#39;empty&#39;,</span><br><span class="line">         tls:&quot;empty&quot;,</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>结果：在后续中运行报错： Uncaught TypeError: fs.existsSync is not a function</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">       target:&quot;node&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：在后续运行中报错：Electron failed to install correctly, please delete node_modules/electron and try installing again</p><h2 id="3-解决2的问题"><a href="#3-解决2的问题" class="headerlink" title="3. 解决2的问题"></a>3. 解决2的问题</h2><p>这样看起来问题挺多的，看了第一个问题，似乎还真有人解决过这个问题，但是他缺少一个文件，而我不缺少，所以先排除了这个问题，甚至是这个解决方法都是错的。直接看后面的错误。</p><p>似乎看不出来啥，于是去webpack官网查了下 target 这个参数，里面有很多的参数，悄悄盯了一下，发现很多参数，其中有为electron提供的参数值。改代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    target:&quot;electron-main&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​结果：顺利运行​</p>]]></content>
      
      
      <categories>
          
          <category> 打包 </category>
          
          <category> npm </category>
          
          <category> electron-pack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> electron </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm包 | 我的第一个npm安装包</title>
      <link href="FIRST_NPM/"/>
      <url>FIRST_NPM/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src= "/img/loading.gif" data-lazy-src="https://s1.ax1x.com/2020/07/03/NjyaGV.jpg" alt="logo"></p><h1 id="我的第一个npm安装包"><a href="#我的第一个npm安装包" class="headerlink" title="我的第一个npm安装包"></a>我的第一个npm安装包</h1><blockquote><p>应公司业务要求，需要制作桌面安装程序。同时也要替代QT，制作QT的安装程序。所以最后我选用了electron制作exe，配合Inno Setup Compiler制作安装包。因为这玩意是我一个人在研究，为了避免我哪天休息不在，还找我打包的情况，我特意写了将这个项目制作成为了一个npm安装包，并附上相应文档，相信还是能看懂的。</p></blockquote><h2 id="1-将自己的函数导出"><a href="#1-将自己的函数导出" class="headerlink" title="1. 将自己的函数导出"></a>1. 将自己的函数导出</h2><p>src/main.js 是我的主要代码文件。</p><p><img src= "/img/loading.gif" data-lazy-src="https://s1.ax1x.com/2020/09/28/0VtNZQ.png" alt="代码"></p><p>index.js 是我引用main.js的文件，并导出，也就是整个npm的入口文件了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">module.exports &#x3D; require(&#39;.&#x2F;src&#x2F;main&#39;)</span><br></pre></td></tr></table></figure><p>build/index.js 是我使用webpack打包的文件。因为需要将第三方插件的引用打包。避免使用引用错误，这里如果纯自己开发的，不引用第三方插件，不需要打包。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">const path &#x3D; require(&#39;path&#39;)</span><br><span class="line">​</span><br><span class="line">module.exports &#x3D; &#123;</span><br><span class="line">    entry: &#39;.&#x2F;index.js&#39;,</span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.join(__dirname, &#39;dist&#39;),</span><br><span class="line">        filename: &#39;bundle.js&#39;</span><br><span class="line">    &#125;,</span><br><span class="line">    mode: &#39;development&#39;,</span><br><span class="line">    target: &#39;electron-main&#39;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-将package-json的main改为index-js"><a href="#3-将package-json的main改为index-js" class="headerlink" title="3. 将package.json的main改为index.js"></a>3. 将package.json的main改为index.js</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;mian&quot;: &quot;index.js&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">​&quot;dev1&quot;: &quot;npx webpack --config build&#x2F;index.js&quot;,</span><br><span class="line">&quot;pub&quot;: &quot;npm run dev1 &amp;&amp; npm version patch &amp;&amp; npm publish&quot;,</span><br><span class="line">&quot;minor&quot;: &quot;npm run dev1 &amp;&amp; npm version minor &amp;&amp; npm publish&quot;,</span><br><span class="line">&quot;major&quot;: &quot;npm run dev1 &amp;&amp; npm version major &amp;&amp; npm publish&quot;,</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm run pub 打包 更新补丁  并上传npm包</span><br><span class="line">npm run minor 打包 更新小版本  并上传npm包</span><br><span class="line">npm run major 打包 更新大版本  并上传npm包</span><br></pre></td></tr></table></figure><h2 id="3-使用"><a href="#3-使用" class="headerlink" title="3. 使用"></a>3. 使用</h2><p>首先安装依赖。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i electron-pack</span><br></pre></td></tr></table></figure><p>然后引用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">const pack &#x3D; require(&#39;electron-pack&#39;)</span><br><span class="line">​</span><br><span class="line">const config &#x3D; &#123;</span><br><span class="line">    width: 1280, &#x2F;&#x2F; 窗口的宽度</span><br><span class="line">    minWidth: 1280, &#x2F;&#x2F; 窗口最小宽度</span><br><span class="line">    height: 960, &#x2F;&#x2F; 窗口高度</span><br><span class="line">    minHeight: 960, &#x2F;&#x2F; 窗口最小高度</span><br><span class="line">    frame: true, &#x2F;&#x2F; 是否有边框</span><br><span class="line">    center: true, &#x2F;&#x2F; 窗口是否在中心</span><br><span class="line">    minimizable: true, &#x2F;&#x2F;窗口是否可以最小化</span><br><span class="line">    maximizable: true, &#x2F;&#x2F;窗口是否可以最大化</span><br><span class="line">    url: &#39;https:&#x2F;&#x2F;orangecj.com&#39;, &#x2F;&#x2F; 打包地址</span><br><span class="line">    isWeb: true, &#x2F;&#x2F; 是否是网站</span><br><span class="line">    openDevTools: true, &#x2F;&#x2F; 是否打开开发者工具</span><br><span class="line">&#125;</span><br><span class="line">​</span><br><span class="line">pack(config)</span><br></pre></td></tr></table></figure><p>最后运行大功告成。</p>]]></content>
      
      
      <categories>
          
          <category> 打包 </category>
          
          <category> npm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> electron </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客 | 如何快速搭建个人博客</title>
      <link href="website/"/>
      <url>website/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src= "/img/loading.gif" data-lazy-src="https://s1.ax1x.com/2020/07/03/NjyaGV.jpg" alt="logo"></p><blockquote><p>我们这一生很短，我们终将会失去它，所以不妨大胆一点，爱一个人，攀一座山，追一次梦，不妨大胆一点，有很多事没有答案。<br>有时候想发表点文章，照片视频什么之类的，方便手机随时查看，而不占用手机内存。还没有太多的局限。那么搭建自己的个人博客是最好的选择了。</p></blockquote><h2 id="搭建最基础的博客框架"><a href="#搭建最基础的博客框架" class="headerlink" title="搭建最基础的博客框架"></a>搭建最基础的博客框架</h2><p>我是直接使用hexo搭建最基础的框架的。</p><p>具体的文档，可以去hexo官网查看。（<a href="https://hexo.io/zh-cn/docs/%EF%BC%89">https://hexo.io/zh-cn/docs/）</a></p><p>具体命令如下：</p><h3 id="安装脚手架："><a href="#安装脚手架：" class="headerlink" title="安装脚手架："></a>安装脚手架：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="初始化博客："><a href="#初始化博客：" class="headerlink" title="初始化博客："></a>初始化博客：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><h3 id="hexo常用命令："><a href="#hexo常用命令：" class="headerlink" title="hexo常用命令："></a>hexo常用命令：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo clean # 用于清理缓存</span><br><span class="line">hexo g # 生成新的文件</span><br><span class="line">hexo d # 上传</span><br><span class="line">hexo serve # 运行本地博客</span><br></pre></td></tr></table></figure><p>当然，安装hexo之前你需要安装node。</p><p>当你初始化完博客之后，hexo serve运行博客，就可以在控制台查看到一盒链接，在浏览器输入链接（localhost:4000)即可查看博客长什么样子了。</p><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><p>在初始化之后，你会感觉自己的你博客不怎么好看，没关系，更换一个主题即可。网上有很多的主题，选择自己喜欢的。</p><p>下载下来，在自己的_config.yml文件里面，找到theme，将后面的主题改为自己下载的名字。</p><h2 id="发表文章"><a href="#发表文章" class="headerlink" title="发表文章"></a>发表文章</h2><p>通过markdown来编辑文章。</p><p>常用的markdown语法如下：</p><h3 id="标题："><a href="#标题：" class="headerlink" title="标题："></a>标题：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">....</span><br></pre></td></tr></table></figure><h3 id="字体："><a href="#字体：" class="headerlink" title="字体："></a>字体：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">**加粗**</span><br><span class="line">*倾斜*</span><br><span class="line">~~删除线~~</span><br></pre></td></tr></table></figure><h3 id="引用："><a href="#引用：" class="headerlink" title="引用："></a>引用：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;这是引用的文字</span><br></pre></td></tr></table></figure><h3 id="分割线："><a href="#分割线：" class="headerlink" title="分割线："></a>分割线：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">***</span><br><span class="line">--- # 三个以上的就行了</span><br></pre></td></tr></table></figure><h3 id="图片："><a href="#图片：" class="headerlink" title="图片："></a>图片：</h3><p><code>![图片](图片的url地址)</code></p><h3 id="超链接："><a href="#超链接：" class="headerlink" title="超链接："></a>超链接：</h3><p><code>[文字](超链接地址url)</code></p><h3 id="代码块："><a href="#代码块：" class="headerlink" title="代码块："></a>代码块：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#96;代码内容&#96;  #单行代码</span><br><span class="line">#多行代码</span><br><span class="line">(&#96;&#96;&#96;)</span><br><span class="line">  代码内容</span><br><span class="line">(&#96;&#96;&#96;)</span><br></pre></td></tr></table></figure><h2 id="托管博客"><a href="#托管博客" class="headerlink" title="托管博客"></a>托管博客</h2><p>我们将改好的文章，可以在GitHub上进行托管，当然也可以在其他同类型的网站上进行托管。</p><p>首先，注册一个GitHub账号，创建一个仓库，仓库名称一定是一下格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">你的GitHub账号名称+github.io</span><br></pre></td></tr></table></figure><p>就像这个样子的：<br><img src= "/img/loading.gif" data-lazy-src="https://pic1.zhimg.com/80/v2-54e0513ab87b4781ee594d12554a0889_720w.jpg" alt="地址"></p><p>然后将git上新建的仓库和你的博客绑定在一起。</p><p>找到_config.yml，更改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">repo: 这里填入你之前在GitHub上创建仓库的完整路径，记得加上 .git(类似https:&#x2F;&#x2F;github.com&#x2F;orangeed&#x2F;orangeed.github.io.git)</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><p>这样你打开orangeed.github.io就可以访问你的个人博客了。但是网址看起来不是很雅观！</p><h2 id="更换域名"><a href="#更换域名" class="headerlink" title="更换域名"></a>更换域名</h2><p>花10几大洋，在腾讯云或者阿里云或者万网上面购买一个域名，一年。然后解析。注意，这里的解析，建议是如下的配置：<br><img src= "/img/loading.gif" data-lazy-src="https://pic2.zhimg.com/80/v2-4fc218e0f8837a850ae8e39f0482ee51_720w.png" alt="域名解析"></p><p>然后，你需要在你的根目录上添加一个文件，不要后缀，文件名为CNAME。里面的内容就是你购买的域名名称。例如：orangecj.cn。</p><p>然后你在通过域名访问，即可浏览个人博客了。</p><h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><p>拓展：为你的博客增加点东西。</p><p>你可以在博客中，放一些照片，视频，音乐。</p><p>同时你也可以使用插件丰富网站。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>装机 | 我的第一次？</title>
      <link href="diy/"/>
      <url>diy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src= "/img/loading.gif" data-lazy-src="https://s1.ax1x.com/2020/07/03/NjyaGV.jpg" alt="logo"></p><p>不知道是多少天了，在无数个难眠的夜晚，我辗转反侧，想有自己的台式电脑，最好是自己组装的，正好，今年刚刚毕业，又赶上了618活动，就开始买买买（虽然自己是在之前两天买的）！</p><p>显示器买了快半个月了，在家都是将他作为笔记本电脑的主显示器了，笔记本电脑反而成为了默默的主机….可怜兮兮！</p><p>后来买了机械键盘，笔记本电脑就真正成为了主机….</p><p>好嘞！我预算有限，就买了一些比较入门的配置，打算以后经济好了再换吧！配置如下:</p><h2 id="屏幕以及其他"><a href="#屏幕以及其他" class="headerlink" title="屏幕以及其他"></a>屏幕以及其他</h2><p>显示器：京东买的夏晶，以前也没有听过，买的时候500多，就因为看到是降价了，才买的，谁也没想到，现在都700多了！那岂不是血赚？？？</p><p><img src= "/img/loading.gif" data-lazy-src="https://pic3.zhimg.com/80/v2-652bcc0a9d628604b94f595a82c80d22_720w.jpg" alt="屏幕"></p><p>键盘：入门级普通机械键盘</p><p>鼠标：楼下39元鼠标</p><p>小音箱：楼下60元双声道小音箱</p><h2 id="机箱"><a href="#机箱" class="headerlink" title="机箱"></a>机箱</h2><p>机箱：ATX机箱，小风扇不少！居然有3个。</p><p><img src= "/img/loading.gif" data-lazy-src="https://pic1.zhimg.com/80/v2-9e44c34c8dfec0ef63a812ef4dc3d868_720w.jpg" alt="机箱"></p><h2 id="硬盘"><a href="#硬盘" class="headerlink" title="硬盘"></a>硬盘</h2><p>硬盘：英睿达MX500，500G的SSD，刚开始买的399，打折啊！！！没想到618的价格也和这个差不多，就是1T的价格下降的多，早知道买1T的了，感觉血亏。不过现在这个又涨价上去了，想想还是赚了。</p><p><img src= "/img/loading.gif" data-lazy-src="https://pic2.zhimg.com/80/v2-e72ed9bf1742ed1fe6f0227d8ab767b9_720w.jpg" alt="硬盘"></p><h2 id="电源"><a href="#电源" class="headerlink" title="电源"></a>电源</h2><p>电源：爱国者的模组版电源，279大洋，优惠后274大洋。</p><p><img src= "/img/loading.gif" data-lazy-src="https://pic1.zhimg.com/80/v2-1b1d4133af6cd0b9e8ecc3a75c2a3d64_720w.jpg" alt="电源"></p><h2 id="内存条"><a href="#内存条" class="headerlink" title="内存条"></a>内存条</h2><p>内存条：一条8G的3200MHZ的，210大洋。本来想买两条的，但是预算不太行，别问我为啥不直接买一条16G的，因为两条是双通道，比一条道快点，就像马路一样，一条道路始终比两条道路堵一点。至少我是这个觉得的</p><p><img src= "/img/loading.gif" data-lazy-src="https://pic4.zhimg.com/80/v2-c3c7f21ecee1178ef3b5cc2d2fd86d8b_720w.jpg" alt="内存条"></p><h2 id="主板套装"><a href="#主板套装" class="headerlink" title="主板套装"></a>主板套装</h2><p>主板套装：AMD R5 3500X和华擎主板，1179大洋。别问我为什么不选择intel的处理器。问就是没钱，所以选择了和i5-9400f性能接近的R5 3500X，感觉用起来挺好的，而且在某些方面超过了i5-9400f。</p><p><img src= "/img/loading.gif" data-lazy-src="https://pic4.zhimg.com/80/v2-99e0f2fc8ffcc701a0457d17425b33eb_720w.jpg" alt="主板套装"></p><h2 id="硅脂"><a href="#硅脂" class="headerlink" title="硅脂"></a>硅脂</h2><p>硅脂：散热器硅脂，追风者的。</p><p><img src= "/img/loading.gif" data-lazy-src="https://pic4.zhimg.com/80/v2-b6b8ee32a42a9f6c002056b45ecc13e7_720w.jpg" alt="硅脂"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这些加起来大概4000多。基本够了一般般情况使用。普通游戏，一般编程啥的，毫无压力的。当然设计的话，可能没有人家9000多专门配置设计来的爽！但是有需求的话，后面还是可以升级的！比如内存条加一个，CPU套装换一个啥的！比如换成intel啥的！</p><p>大大小小的配件，可还是花了我不少时间去组装，毕竟第一次组装，经验不足，还问了商家一些问题，好在是后面自己都给装好了。</p><p>原文链接:<br><a href="https://zhuanlan.zhihu.com/p/149709121">知乎_橘子的分享</a><br><a href="https://mp.weixin.qq.com/s/dCLIoZPkHTE4GJn4G4AIFQ">微信公众号_橘子的分享</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 装机 </tag>
            
            <tag> DIV </tag>
            
            <tag> 电脑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>毕业 | 人生百态，我是其一</title>
      <link href="gradution/"/>
      <url>gradution/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src= "/img/loading.gif" data-lazy-src="https://s1.ax1x.com/2020/07/03/NjyaGV.jpg" alt="logo"></p><blockquote><p>如果我们有机会重返青春现场，一定发现，那个青春，与我们相携终身，不断怀念，惊鸿照影的青春有异，我们对它的怀念，是一种刻骨的高估。</p></blockquote><p>这是一篇碎碎念的帖子，没有以往的技术贴，也没有什么分享帖，有的只是碎碎念。</p><p>2016年入学，2020年毕业，时光荏苒….当然我也不想说这些屁话，废话。</p><p>不过还是要写写什么的。就算是给自己的大学给一个交代吧。</p><h2 id="关于兴趣与比赛"><a href="#关于兴趣与比赛" class="headerlink" title="关于兴趣与比赛"></a>关于兴趣与比赛</h2><p>大一，拥有了自己的第一台电脑。自己可劲折腾，各种软件都想尝试，各种系统也都试用，甚至是开始了拆机之旅。虽然对很多人说，那是一个非常简单的事情，可是在那个时候，我是真的第一次。</p><p>大一，我也开始比赛之旅，这条不归路还是被英语、日语专业等朋友带起来的，可以说他们是最大的共犯了。从此到大三，我才结束了我这罪恶的比赛之旅，没有什么大的成绩，小成绩不断，小打小闹的。现在想想，大一和大家在1402（应该是这个办公室？）写材料，初现稚嫩。后来大二，占用了赵文浩学长的办公室，和老邓、天正、凯捷等开始熬夜通宵写材料，开始熟练于心。大三，自己带了团队，但是结果不怎么美好，虽然也拿了奖。</p><h2 id="关于工作"><a href="#关于工作" class="headerlink" title="关于工作"></a>关于工作</h2><p>四年，参加了不少的工作，认识了不少的人，有的现在和我一样毕业了，有的待业中，有的走上了新的岗位，有的创业了。似乎大家都在各自的生活圈中混的风生水起，但是谁又知道谁的苦楚？前两天还有朋友让我陪他去寺庙祈福，赶走水逆。</p><p>有的创业了，几年下来，失败一个又一个项目，却就像打不倒的小强似得，也是越战越勇，继往开来，前段时间还聊到他们公司，问了基本情况，他们还招人的哟，有兴趣的可以问我，我帮忙推荐。有的始终坚持着自己创业梦想，未曾改变，坚持肯定是会有结果的！</p><p>其实，我想说的是，在大学多参加工作，认识的人也就会很多，会很有趣。同时在大四或者毕业后，项目经历或者说是工作经历是一个非常重要的指数。</p><h2 id="关于聚餐"><a href="#关于聚餐" class="headerlink" title="关于聚餐"></a>关于聚餐</h2><p>从小到大，聚散都习以为常。</p><p>毕业，这个也是经历了一次又一次，印象最深刻的还是高中毕业了吧。怎么形容当时的我呢，交际花吧？不对，应该是交际草！哈哈哈，和班级的每一个人都拥有很好的关系，还有旁边文科班以及楼下的几个理科班的同学。毕业当天，我的白色班级短袖上写满了同学的名字，似乎写下了名字，就能把他们留在了我身边一辈子。拍了很多的毕业照，都在我现在的那个坏掉的手机以及云空间里。还要找个时间，把手机的数据提取出来才行。</p><p>入夜，仿佛城市才开始醒来，一起到了酒店（听说星级很高，忘了名字），吃得少，喝的多，一箱酒，下肚，几趟厕所，坐在凳子上，目视前方，一言不发，明显我是醉了，只是还能思考而已，身体不太听使唤。隔壁桌子是其他学校，现场表白在一起。如此氛围，我也没有说出一些话的勇气，可能只是一份担不起的责任。第二天头晕目眩的参加了口语考试，还好遇到了自己的英语老师。</p><p>而现在，大学毕业，仿佛缺了点什么，自己工作，同时也不想在喝很多的酒，更加不像因为分别而伤心。以前的我，总是在别人走后我在选择离开，这样的话，他们就看不到我离开的背影，而是我看到大家离开的背影。这次毕业，我选择了不参加毕业聚餐，拍完毕业照，直接溜掉。不想因为分别而感到一丝丝心情的波动，同样，大四一直都在外面，离开校园很久，感觉很多时候，很多话题都不在了。</p><h2 id="关于爱"><a href="#关于爱" class="headerlink" title="关于爱"></a>关于爱</h2><p>别问！！！问就是没有，大学四年，没有谈过。</p><p>自从和前任分手后，自己感觉对于这个爱情来说，我认为是一份责任，我现在没有物质担得起，选择不谈，但是很多时候也是很羡慕别人。有和别人以开玩笑的形式聊到这个话题，聊着聊着，我就不敢再说了。别问，问就是没钱陪你high爆整个青春。 </p><h2 id="关于想说的话"><a href="#关于想说的话" class="headerlink" title="关于想说的话"></a>关于想说的话</h2><p>想说的话很多很多…..</p><p>eg:</p><p>感谢周志丹老师、王绍卜老师等很多老师在大学里面对我的照顾。</p><p>劝诫学弟学妹们，多多参加和自己未来工作相关或者专业相关的实习，大公司最好。</p><p>希望学弟学妹们，还是多谈谈恋爱吧，别给自己留下遗憾，千万不要学我！！！</p><p>希望学弟学妹们，多多参加比赛以及社会实践等等，增加自己的见识，真的！！！同时练好基础！不然你到时候后悔莫及！</p><p>以上！！！来自一个电子商务专业，却是程序员的2020届毕业生亲身所述。</p><p>原文链接:<br><a href="https://zhuanlan.zhihu.com/p/147359841">知乎_橘子的分享</a><br><a href="https://mp.weixin.qq.com/s/qGhbt96XDQSYSOJoJ40jyQ">微信公众号_橘子的分享</a></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 毕业 </tag>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软著 | 手把手教你如何申请软著</title>
      <link href="softwriting/"/>
      <url>softwriting/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src= "/img/loading.gif" data-lazy-src="https://s1.ax1x.com/2020/07/03/NjyaGV.jpg" alt="logo"></p><p>毕业设计，经过磨难，终于写出了一个基本版本，我称他为1.0.0版本。这是一个电子商务网站，包括前台购买，后台管理系统，数据库和服务端。较为完整，就申请了个软著，后面也没有继续完善嘞。</p><h2 id="1-准备好要申请的软件"><a href="#1-准备好要申请的软件" class="headerlink" title="1 准备好要申请的软件"></a>1 准备好要申请的软件</h2><p>软著，全称软件著作权，这个简单的讲，就是拿一个软件去申请一个软件属于你的权利，所以软件是核心，最好是自己写的，或者是没有过的。反正就是不要抄袭别人的就好了。</p><h2 id="2-准备两份材料"><a href="#2-准备两份材料" class="headerlink" title="2 准备两份材料"></a>2 准备两份材料</h2><p>两份材料，包含了代码部分和软件设计书或者软件使用说明书。</p><p>代码部分，很简单，将你的程序软件的核心代码拷贝一份，放在一个文件下面，必要要有60页，其实这个很简单的，一个软件程序，动不动就是几千行上万行的。</p><p>软件设计书，或者软件使用说明书。前者，就是写你这个程序当时是怎么设计的，系统需求，系统设计，系统实现这几个部分是最重要的，还要写数据库是怎么设计的，包含了哪些表，表里面含有哪些字段。软件使用说明书，就是指这个软件是怎么使用的，你要一步一步的说明哪个功能模块怎么进入，怎么操作，会得到什么结果之类的。这个就比较详细，但是一般也没超过20页。</p><h2 id="3-准备合作开发合同"><a href="#3-准备合作开发合同" class="headerlink" title="3 准备合作开发合同"></a>3 准备合作开发合同</h2><p>如果你是个人开发的，就可以跳过这一步了，只有是合作开发的时候，才需要一个合作开发合同，这样是为了保证两个人的权利问题。防止以后扯皮或者其他什么问题。</p><h2 id="4-打印好以下的材料"><a href="#4-打印好以下的材料" class="headerlink" title="4 打印好以下的材料"></a>4 打印好以下的材料</h2><p>打印一份代码，打印一份软件设计书，打印一份合作开发合同，加起来也不贵，就几十元的样子。然后你需要去“中国版权保护中心”登录一下你的帐号进行填写软著申报登记（计算机软件著作权登记申请表），然后将这个填写好的登记表打印出来，在上面签字填写必要的信息就好了。最后将这些东西寄出去，地址是北京市西城区天桥南大街1号天桥艺术大厦A座三层。</p><h2 id="5-下面就是漫长的等待"><a href="#5-下面就是漫长的等待" class="headerlink" title="5 下面就是漫长的等待"></a>5 下面就是漫长的等待</h2><p>2019年12月24日，我登记了软著，并将材料寄出去了，然后就是等待了。</p><p>2020年2月11日，才开始受理登记。</p><p>2020年3月18日开始审查，领导审批。</p><p>2020年3月19日发证。</p><p>2020年4月15日收到快递，拿到了心念已久的软件著作权登记证书。</p><p><img src= "/img/loading.gif" data-lazy-src="https://pic2.zhimg.com/80/v2-521b111ecfc11b6ac08dd08c278c23b5_720w.jpg" alt="软著申请流程图"></p><p>时间稍微有点久，可能也是因为疫情的原因吧。</p><p>这是拿到的快递样子。</p><p><img src= "/img/loading.gif" data-lazy-src="https://pic1.zhimg.com/80/v2-a9396b2d8e249194f9eec4c86ebabc18_720w.jpg" alt="快递图"></p><p>这是里面的软件著作权登记证书。</p><p><img src= "/img/loading.gif" data-lazy-src="https://pic1.zhimg.com/80/v2-beed3eb8cde90342f51f9784cf90590c_720w.jpg" alt="证书图"></p><p>嗯….图片较为模糊，毕竟自己的老年人手机用了好久了，摄像头都被磨损了。害！将就看吧~~~</p><p>有想申请软著的朋友，不同的地方可以问我哈，虽然我也只是申请了一次，但是会的会说的，不会的就….无能为力嘞！</p><p>就这样吧，以上！</p><p>原文链接:<br><a href="https://zhuanlan.zhihu.com/p/141529705">知乎_橘子的分享</a><br><a href="https://mp.weixin.qq.com/s/s04atr0HO-axxHopW9_wVg">微信公众号_橘子的分享</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软著 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
